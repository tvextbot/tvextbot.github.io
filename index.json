[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://tvextbot.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":["Manual"],"contents":" 트레이딩뷰의 얼러트의 메시지를 텔레그램 알림으로 받을수 있는 서비스입니다.\n텔레그램 알림 전용 서비스이기 때문에 알림만 받을수 있고 실제 주문은 되지 않습니다.\n 트레이딩뷰 얼러트 설정 방법  아직 텔레그램 개인 알림봇을 설정하지 않으셨다면 텔레그램 개인 알림봇 사용법  을 참고하여 설정해 두세요.\n1.시그널을 받고자 하는 지표를 차트에 추가한후 텔레그램으로 알림을 받을 메시지를 얼러트에 설정합니다.   메시지 형식 1{ 2 \u0026#34;message\u0026#34;: \u0026#34;①\u0026#34;, 3 \u0026#34;token\u0026#34;: \u0026#34;②\u0026#34; 4}\n①  텔레그램으로 받을 메시지를 설정 ( 예:매수 시그널 : {{exchange}}:{{ticker}}, price = {{close}}, volume = {{volume}})\n②  인증키를 설정\n※ 메시지에는 파인스크립트에서 지원하는 변수를 사용할수 있습니다. ( 사용법 보기 ) \n2.알림탭에서 아래의 웹훅주소를 입력합니다.\n  https://tvextbot-signal.web.app/api/alert\n 위의 웹훅주소이외에는 알림을 받을수 없으니 주의하여 주세요.\n  3.트레이딩뷰의 얼러트가 실행되면 아래와 같은 메시지를 텔레그램 알림봇을 통해 받을수 있습니다.  ","date":"March 4, 2023","hero":"/posts/tradingview_telegram/images/hero.png","permalink":"https://tvextbot.github.io/posts/tradingview_telegram/","summary":"\u003cblockquote\u003e\n\u003cp\u003e트레이딩뷰의 얼러트의 메시지를 텔레그램 알림으로 받을수 있는 서비스입니다.\u003cbr\u003e\n텔레그램 알림 전용 서비스이기 때문에 알림만 받을수 있고 실제 주문은 되지 않습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["트레이딩뷰 얼러트","텔레그램 알림"],"title":"트레이딩뷰 얼러트를 텔레그램 알림으로 받는 방법"},{"categories":["Manual"],"contents":"토레스 전략은 TVExtBot 사용자이신 Torres님이 제공하는 트레이딩뷰 초대전용 전략으로 선물/현물 코인의 추세와 역추세 그리고 횡보에 강한 전략입니다.\n 중요사항   토레스 전략은 초대전용 전략으로 Torres님이 제공하는 레퍼럴로 가입하시는 분들에 한해서는 평생 무료로 사용가능 합니다. TVExtBot 사용자에 한해서 한달간 무료체험 가능합니다. 지표사용 권한 요청은 Torres님의 Discord 채널  또는 카톡 오픈방 으로 문의하여 주세요. 지표 사용에 의해서 발생한 매매손실에 대해서는 일체 책임을 지지 않으니 유의하여 주세요.   설명 토레스 전략은 트레이딩뷰 초대전용 전략으로 선물/현물 코인의 추세와 역추세 그리고 횡보에 강한 전략입니다.\n전략 모드는 3 가지가 있으며, 각각을 혼합하여 스캘핑부터 스윙까지 지원가능한 전략입니다.\n추천하는 코인은 전 대상 코인에서 초봉부터 시간봉까지 다양한 전략을 구사할 수 있습니다.\n다양한 웹훅서비스를 통한 자동매매를 위해서 주문메세지 입력을 지원하며, 분할진입모드 또한 지원하고 있습니다.\n셋팅방법  본 영상은 토레스 전략을 이용하시는 분들을 위해 제작된 세팅법 소개 영상입니다.   주문메시지 작성  본 영상은 토레스 전략의 봇 주문메시지 작성방법 소개 영상입니다.    전략의 세팅방법에 대한 노하우 및 사용자간 토론을 Torres님의 Discord 채널  또는 카톡 오픈방  에서 지원하고 있으니 관심있으신 분들은 연락 주세요.\n","date":"January 8, 2023","hero":"/posts/strategies/community/indicator_torres/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/community/indicator_torres/","summary":"\u003cp\u003e\u003cspan class=\"text-primary\"\u003e\u003cstrong\u003e토레스 전략\u003c/strong\u003e\u003c/span\u003e은 TVExtBot 사용자이신 Torres님이 제공하는 트레이딩뷰 초대전용 전략으로 선물/현물 코인의 추세와 역추세 그리고 횡보에 강한 전략입니다.\u003c/p\u003e","tags":["토레스 전략"],"title":"토레스 전략"},{"categories":["Manual"],"contents":" 바이빗 테스트넷 사용법에 대해서 설명해 드리겠습니다.\n 바이빗 테스트넷 가입 1.바이빗 테스트넷 을 클릭하여 테스트용 계정을 생성합니다.   이메일과 패스워드를 입력후 테스트용 계정을 생성하세요.계정 등록 과정은 생략하겠습니다.\n2.생성한 계정으로 로그인을 한후 오른쪽 아래에 있는 채팅봇 버튼을 클릭합니다.  3.채팅봇 버튼을 클릭한후 조금 기다리면 [Testcoin deposit] 이라는 링크가 나타납니다.  4.테스트넷 계정이 있는냐는 질문에 Yes를 선택합니다.   잠시후 테스트코인이 자동으로 발행된다는 안내문과 함께 본인의 계정으로 입금이 됩니다.\n5.Asset 링크를 클릭하여 입금이 되었는지 확인합니다.   선물거래를 할 경우 [Transfer] 버튼을 클릭하여 선물계정으로 자산을 옮깁니다.\n테스트넷 API키 발급 6.API 페이지로 이동하여 [Create New Key] 버튼을 클릭합니다.  7.아래와 같이 입력한후 [Submit] 버튼을 클릭합니다.  8.API키(①)와 비밀키(②)가 생성됩니다.   창을 닫지 말고 API키와 비밀키를 메모해 두세요.\nAPI키 등록 9.확장프로그램의 API키 등록화면으로 이동하여 위의 API키(①)와 비밀키(②)를 아래에 입력해 주세요.   문제없이 연결되면 [연결에 성공하였습니다.]라는 메시지가 표시됩니다.\n10.아래와 같이 퀵주문에서 Bybit 선물 테스트넷을 선택한후 [보유자산보기] 버튼을 클릭하면 자산이 조회됩니다.   퀵주문으로 주문이 되는지 확인해 보세요.\n","date":"July 27, 2022","hero":"/posts/testnet/images/hero.png","permalink":"https://tvextbot.github.io/posts/testnet/","summary":"\u003cblockquote\u003e\n\u003cp\u003e바이빗 테스트넷 사용법에 대해서 설명해 드리겠습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["바이빗 테스트넷","테스트넷"],"title":"바이빗 테스트넷 사용법"},{"categories":["Manual"],"contents":" 텔레그램 비공개 채널로 채널 맴버 전원에게 TVExtBot에서 실행된 자동매매와 에러정보를 실시간으로 받아 볼수 있습니다.\n BotFather에서 채팅봇 생성 아래의 내용은  텔레그램 비공개 채널 알림봇 서비스를 사용하기 위한 설명입니다.\n1.텔레그램(Telegram) 메신저에서 채팅 봇을 생성하고 관리해주는 봇인 [BotFather]를 검색합니다. 여러 개의 봇들이 나타나는데 그 중에서 인증 마크가 붙어 있는 텔레그램 공식 봇을 선하고 채팅 방에 들어갑니다.  2.[BotFather] 채팅 봇 방에 들어가면 채팅 봇에 대한 설명과 봇 API 매뉴얼 링크를 확인할 수 있습니다.  3.채팅 봇 생성을 위해 /start 명령을 입력하면 아래와 같이 채팅 봇 생성, 관리에 대한 명령어들을 확인할 수 있습니다.  4.새로운 채팅 봇을 생성하는 명령어인 /newbot을 입력하면, 채팅 봇 이름과 채팅 봇 유저명을 입력하라는 안내가 나옵니다. 차례대로 입력하면 되는데, 여기서 입력하는 이름을 텔레그램 내에서 고유한 값이므로 간단한 이름을 입력하면 중복된 이름이라 생성이 되지 않으니 자신만의 고유한 이름을 입력합니다.   입력하는 채팅 봇 유저명(username for your bot)은 반드시 마지막이 bot로 끝나야 합니다. 두가지 모두 입력하고 나면 아래쪽에 채팅 봇과 연동하기 위한 API Token을 확인할 수 있는데, 나중에 이 Token을 봇에 입력합니다.\n5.채팅 봇이 생성되었는지 텔레그램에서 검색해보면 아래와 같이 확인할 수 있습니다.  비공개 채널 생성 6.채널을 생성하기 위해 텔레그램 왼쪽 메뉴를 클릭하여 채널만들기를 선택합니다.  7.원하는 채널명을 입력하고, 만들기를 클릭하면, 공개-비공개를 선택할 수 있는데 여기서는 [비공개 채널]을 선택하고 저장합니다.  8.저장하고 나면 다음으로 [참가자 추가] 화면이 나타나는데 위에서 생성했던 채팅 봇 이름을 입력해서 확인하고, 선택 후에 [추가] 버튼을 클릭합니다.  9.그러면 아래와 같이 [봇은 관리자로서만 추가될 수 있습니다]라는 메시지가 나타납니다. 바로 [관리자로 세우기] 버튼을 클릭합니다.  10.관리자의 권한은 여러가지가 있는데 원하는 권한을 부여하고 [저장] 버튼을 클릭합니다.  채팅 방 ID 확인 11.메시지를 전송하기 위해서는 현재 생성된 비공개 채널의 chat_id를 확인해야 합니다.\n우선, 채널에서 아무 메시지나 입력합니다. (꼭 하셔야 합니다)  TVExtBot과 비공개 채널 연동방법 12.확장프로그램의 기본설정화면에서 위에서 생성한 토큰과 채널명을 입력하여 적용합니다.   [텔레그램 채널명을 설정하였습니다.]라는 메시지가 뜨면 문제없이 설정된겁니다.\n 퀵주문을 사용해서 메시지가 오는지 확인해 보세요.\n","date":"July 25, 2022","hero":"/posts/channel/images/hero.png","permalink":"https://tvextbot.github.io/posts/channel/","summary":"\u003cblockquote\u003e\n\u003cp\u003e텔레그램 비공개 채널로 채널 맴버 전원에게 TVExtBot에서 실행된 \u003cspan class=\"text-success\"\u003e자동매매와 에러정보를 실시간\u003c/span\u003e으로 받아 볼수 있습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["텔레그램","채널"],"title":"텔레그램 비공개 채널 알림봇 사용법"},{"categories":["Manual"],"contents":"그리드 현물매매 전략은 미리 지정된 그리드 가격에서 하방 돌파시 분할 매수하고 상승 돌파시 분할 매도하는 박스권 횡보 장세에 유리한 전략입니다.\n 중요사항  현물 매매 전용입니다. 단축 주문메시지를 사용한 스크립트입니다.스크립트도 무료로 공개중입니다. 지지와 저항에 대한 기본적인 차트 분석이 가능한 중급이상의 사용자분들만 사용해 주세요. 지표 사용에 의해서 발생한 매매손실에 대해서는 일체 책임을 지지 않으니 유의하여 주세요.   설명  아래의 차트는 업비트 BTC-KRW 15분봉에서 그리드 현물매매 전략을 적용한 예입니다.    그리드: 이 알고리즘에는 총 10개의 그리드가 있습니다.\n 이익실현: 인풋에서 그리드 사이의 간격을 늘리거나 줄일 수 있으며, 한 그리드와 다른 그리드 사이의 거리는 이익실현을 나타냅니다.\n 매매 타이밍: 알고리즘은 가격이 그리드를 상방돌파시 자본의 10%를 매수하고 하방돌파시 포지션의 10%를 매도합니다.\n 스탑로스: 인풋에서 스탑로스를 활성화하면 알고리즘은 마지막 하단 그리드에서 모든 포지션을 종료합니다.(전량매도)\n 거래: 가격이 그리드 내에 있는 경우에만 매매가 됩니다.그리드를 벗어나 있을경우에는 인풋에서 상단 그리드 가격을 재설정해 주세요.\n 최적의 시장 조건: 이 알고리즘에 유리한 시장은 박스권 횡보 장세입니다.\n 그리드 전략의 한계  시장이 횡보 추세에 있을 때만 완벽하게 작동하고 시장이 약세 추세를 취하면 큰 손실을 입습니다. 이 전략은 상승 추세에 사용할 수 없습니다. 따라서 사용자는 이 전략을 사용하려는 장세를 주의 깊게 분석하여 가격이 횡보 추세에 있는지 확인해야 합니다.\n 입력항목 설명  인풋 항목  인증키 : 봇 구매시에 메일로 받은 인증키를 입력 매수주문ID : 매수주문ID를 입력(10%분할매수) 매도주문ID : 매도주문ID를 입력(10%분할매도) 손절주문ID : 손절주문ID를 입력(전량매도) 그리드 간격(%) : 그리드의 간격을 입력(디폴트:0.5) 상단 그리드 가격 : 상단 그리드 가격을 입력(가격이 그리드를 벗어날 경우 재설정 필요) 사용여부 : 스탑로스 사용여부를 선택(디폴트:NO)  사용을 원할 경우 YES로 변경하세요. 손절비율(%) : 하단 그리드 가격대비 비율을 입력(디폴트:0)   설정방법 1.아래 링크에 있는 그리드 현물매매 전략 스크립트를 전체 복사하여 트레이딩뷰의 파인에디터에 붙여쓰기를 합니다.\n 그리드 현물매매 전략 스크립트 다운로드   ①파인에디터 선택 → ②위에서 복사한 스크립트 붙여쓰기 → ③저장\n2.차트에 넣기를 클릭한후 상단 그리드 가격을 지정합니다.   ①차트에 넣기 클릭 → ②『그리드현물매매전략에 대한 상단 그리드 가격 가격설정』 이 뜸 → ③상단 그리드 가격을 지정하기 위해 클릭\n※상단 그리드 가격은 인풋에서 재설정 가능합니다.\n3.그리드 현물매매 전략을 차트에 적용하면 아래와 같이 보입니다.  주문메시지 작성 업비트 BTC/KRW를 예로 설명하겠습니다.\n매수 주문메시지 1.주문메시지 작성화면에서 아래와 같이 매수주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ①과②는 차트설정에서 사용합니다. 예) 매수 주문 메시지 내용  거래소 : 업비트 계정 : 기본계정(본인의 계정을 선택) 거래코인 : BTC/KRW 거래방법 : 매수 주문유형 : 시장가 주문수량 : 자산대비 10% 메모 : 그리드 전략 업비트 BTC 자산대비 10% 매수   매도 주문메시지 2.주문메시지 작성화면에서 아래와 같이 매도주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ③과④는 차트설정에서 사용합니다. 예) 매도 주문 메시지 내용  거래소 : 업비트 계정 : 기본계정(본인의 계정을 선택) 거래코인 : BTC/KRW 거래방법 : 매도 주문유형 : 시장가 주문수량 : 자산대비 10% 메모 : 그리드 전략 업비트 BTC 자산대비 10% 매도   손절 주문메시지 3.주문메시지 작성화면에서 아래와 같이 손절주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ⑤과⑥는 차트설정에서 사용합니다. 예) 손절 주문 메시지 내용  거래소 : 업비트 계정 : 기본계정(본인의 계정을 선택) 거래코인 : BTC/KRW 거래방법 : 매도 주문유형 : 시장가 주문수량 : 잔액대비 100% 메모 : 그리드 전략 업비트 BTC 전량매도   주문메시지 순서 변경방법 4.주문메시지 리스트에 등록된 주문메시지의 순서를 변경하려면 해당 주문메시지를 클릭한채로 이동하면 됩니다.  차트설정 4.인풋화면을 열어 아래와 같이 위의 주문메시지 작성에서 등록된 주문메시지의 주문ID와 메모를 입력합니다.\n※주문ID와 메모는 주문메시지 작성화면에 있는  을 클릭하면 복사됩니다.\n 주문ID와 메모 입력하기  인증키 : 봇 구매시에 메일로 받은 인증키를 입력 매수주문ID : ①을 입력 Memo : ②를 입력 매도주문ID : ③을 입력 Memo : ④를 입력 손절주문ID : ⑤을 입력 Memo : ⑥를 입력     중요사항  자동매매중에 위의 인풋 항목을 변경할 경우 변경한 내용을 자동매매에 적용하기 위해서는 반드시 기존 얼러트를 삭제하고 새로운 얼러트를 추가하셔야 합니다.  얼러트 설정 얼러트 설정 입력내용  ⑦ 조건 : 『그리드 현물매매 전략』 를 선택 ⑧ 웹훅URL을 입력 (※1) ⑨ 얼러트 네임 : 『그리드 현물매매 전략』 를 입력 (※입력하지 않아도 됩니다) ⑩ 메시지 : 『{{strategy.order.alert_message}}』 를 입력 (※2)   (※1) 반드시 본인의 메시지 작성화면에 있는 웹훅URL을 입력해 주세요.\n(※2) 아래의 내용을 복사해서 얼러트에 메시지란에 붙여쓰기 하세요. {{strategy.order.alert_message}}  ※얼러트는 한개만 추가하면 됩니다.\n출처 Grid Spot Algorithm Trading \n 궁금한 사항이 있으시면 메일()로 문의를 해주세요.","date":"May 27, 2022","hero":"/posts/strategies/strategy_grid/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/strategy_grid/","summary":"\u003cp\u003e\u003cspan class=\"text-primary\"\u003e\u003cstrong\u003e그리드 현물매매 전략\u003c/strong\u003e\u003c/span\u003e은 미리 지정된 그리드 가격에서 하방 돌파시 분할 매수하고 상승 돌파시 분할 매도하는 박스권 횡보 장세에 유리한 전략입니다.\u003c/p\u003e","tags":["그리드","현물매매","전략"],"title":"그리드 현물매매 전략"},{"categories":["Manual"],"contents":" 단축 주문메시지란 기존의 긴 주문메시지의 단점을 보완하기 위해 짧은 형태로 줄인 주문메시지를 말합니다.\n기존 주문메시지는 수정하면 트레이딩뷰의 얼러트를 다시 설정해야 하는 불편함이 있지만 단축 주문메시지는 주문ID와 연동되어 클라우드 서버에 저장되기 때문에 얼러트를 다시 설정할 필요가 없습니다.\n  유의사항  주문ID는 프로그램내에서 자동생성됩니다.그래서 임의로 변경할수 없습니다. 주문메시지 리스트에서 주문메시지를 삭제하면 단축 주문메시지를 사용할수 없습니다. 주문메시지를 삭제후 새로 등록하면 주문ID가 변경되니 이럴 경우는 얼러트를 다시 설정해야 합니다.   주문메시지 리스트에 등록하기 1.주문내용에 대한 메모를 상세하게 기입한뒤 메시지등록 버튼을 클릭합니다.  2.메시지등록을 하면 주문ID가 자동생성 되어 주문메시지 리스트에 추가됩니다.  단축 주문메시지를 복사하여 얼러트에 설정하기 3.복사버튼을 클릭해서 단축 주문메시지 복사를 선택합니다.   단축 주문메시지 내용 TVM:{\u0026#34;orderid\u0026#34;:\u0026#34;180f8d370b32e\u0026#34;,\u0026#34;memo\u0026#34;:\u0026#34;바이낸스 현물 잔액대비 30% 매수\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT  memo는 없어도 주문하는데는 지장이 없습니다만 주문메시지를 이해하는데 필요하기 때문에 가능하면 꼭 기입해 두시길 바랍니다.\n4.참고로 주문메시지 리스트에서 검색창에 주문ID를 입력하면 해당 주문을 검색할수 있습니다.  5.트레이딩뷰의 얼러트 설정에서 단축 주문메시지를 설정합니다.   기존 주문메시지 설정방법과 동일합니다.\n 여러개의 단축 주문메시지를 연결하여 설정하시면 순서대로 주문이 실행됩니다.\n이상으로 단축 주문메시지 작성방법을 알아보았습니다.\n 궁금한 사항이 있으시면 메일()로 문의를 해주세요.\n","date":"May 24, 2022","hero":"/posts/shortmsg/images/hero.png","permalink":"https://tvextbot.github.io/posts/shortmsg/","summary":"\u003cblockquote\u003e\n\u003cp\u003e단축 주문메시지란 기존의 긴 주문메시지의 단점을 보완하기 위해 짧은 형태로 줄인 주문메시지를 말합니다.\u003cbr\u003e\u003cbr\u003e\n기존 주문메시지는 수정하면 트레이딩뷰의 얼러트를 다시 설정해야 하는 불편함이 있지만 단축 주문메시지는 주문ID와 연동되어 클라우드 서버에 저장되기 때문에 얼러트를 다시 설정할 필요가 없습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["단축","단축 주문메시지"],"title":"단축 주문메시지 사용법"},{"categories":["Manual"],"contents":"하이킨아시 업스윙 전략은 하이킨아시를 활용하여 상승하는 추세를 따라가며 상승장에서만 수익을 실현하는 단기매매에 적합한 추세추종 전략입니다.\n 중요사항  모든 유료 사용자는 무료로 사용가능합니다. 추천 시간봉은 30분,1시간,2시간이며 현물거래에서 비트코인,이더리움 등 유동성이 큰코인에 적합합니다. 처음에는 소액으로 사용해 주시면 감사하겠습니다. 지표 사용에 의해서 발생한 매매손실에 대해서는 일체 책임을 지지 않으니 유의하여 주세요.   설명 하이킨아시 업스윙 전략은 하이킨아시를 활용하여 상승하는 추세를 따라가며 상승장에서만 수익을 실현하는 단기매매에 적합한 추세추종 전략으로 롱에만 사용가능하고 현물에 적합니다.\n가장 큰 특징은 파인스크립트의 스트래티지를 소스 수정없이 바로 자동매매에 사용할수 있기 때문에 파인스크립트를 몰라도 누구나 간단히 사용할수 있습니다.\n 하이킨아시 업스윙 전략\n백테스트 아래의 백테스트 결과는 빗썸 거래소 ETH/KRW 차트의 30분봉기준입니다.(테스트 기간:2020년1월1일부터 2021년9월10일까지)  ※ 백테스트는 누구나 사용가능합니다. 아래의 링크를 클릭하여 즐겨찾가에 추가한 다음 직접 테스트를 실시하여 수익률을 확인하세요.\n 하이킨아시 업스윙 전략 보기\n입력항목 설명  인풋 항목  Authentification Key : 봇 구매시에 메일로 받은 인증키를 입력 Long Entry OrderID : 롱진입 주문ID를 입력 Long Close OrderID : 롱청산 주문ID를 입력 Short-Term Volatility (초기값:96) : 단기 변동성 입력 (※1) Long-Term Volatility (초기값:97) : 장기 변동성 입력 (※1) Take Profit (%) (초기값:15) : 익절을 입력 Trailing Stop (%) (초기값:10) : 트레일링스탑을 입력   (※1) 값이 낮을수록 매수가 공격적입니다\n※트레일링 스탑이란 진입 이후의 종가에서 \"스탑\"설정한 비율 만큼 하락할 경우 자동으로 포지션을 종료하여 수익 및 손실을 방어하는 주문을 의미합니다. 주문메시지 작성 빗썸 ETH/KRW를 예로 설명하겠습니다.\n 하이킨아시 업스윙 전략 자동매매 설정 동영상 가이드   -- 매수 주문메시지 1.주문메시지 작성화면에서 아래와 같이 매수주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ①과②는 차트설정에서 사용합니다. 예) 매수 주문 메시지 내용  거래소 : Bithumb 계정 : 기본계정(본인의 계정을 선택) 거래코인 : ETH/KRW 거래방법 : 매수 주문유형 : 시장가 주문수량 : 100000(개수 KRW선택) 메모 : 하이킨아시 업스윙 매수 (빗썸 ETHKRW)   매도 주문메시지 2.주문메시지 작성화면에서 아래와 같이 매도주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ③과④는 차트설정에서 사용합니다. 예) 매도 주문 메시지 내용  거래소 : Bithumb 계정 : 기본계정(본인의 계정을 선택) 거래코인 : ETH/KRW 거래방법 : 매도 주문유형 : 시장가 주문수량 : 100%(잔액대비) 메모 : 하이킨아시 업스윙 매도 (빗썸 ETHKRW)   차트설정  주의사항  매수 얼러트를 설정할때 변동성 돌파 라인을 돌파한 시점에서 얼러트를 추가하면 매수 시그널이 발생하여 매수 주문이 실행 됩니다. 그래서 반드시 아래와 같이 해당 거래소의 API 연결을 차단한후 얼러트를 설정을 해주세요.\n【API키 차단중】  아래의 얼러트 추가를 끝낸후 반드시 API를 연결중으로 해주셔야 합니다.\n【API키 연결중】   3.먼저 사용하실 거래소와 30분봉을 선택한후 하이킨아시 업스윙 지표를 불러옵니다.(※ 예는 빗썸 30분봉 차트입니다.) ※지표검색창에 『[TVExtBot]Heikinashi Upswing Strategy』을 입력  4.차트에 지표를 추가하면 자동적으로 인풋화면이 열려 아래와 같이 위의 주문메시지 작성에서 등록된 주문메시지의 주문ID와 메모를 입력합니다. ※주문ID와 메모는 주문메시지 작성화면에 있는  을 클릭하면 복사됩니다.\n 주문ID와 메모 입력하기  Authentification Key (인증키) : 봇 구매시에 메일로 받은 인증키를 입력 Long Entry OrderID (롱진입 주문ID) : ①을 입력 Memo : ②를 입력 Long Close OrderID (롱청산 주문ID) : ③을 입력 Memo : ④를 입력    주문ID와 메모 입력후 화면   중요사항  자동매매중에 위의 인풋 항목을 변경할 경우 변경한 내용을 자동매매에 적용하기 위해서는 반드시 기존 얼러트를 삭제하고 새로운 얼러트를 추가하셔야 합니다.  얼러트 설정 얼러트 설정 입력내용  ⑤ 조건 : 『[TVExtBot]HAUS』 를 선택 ⑥ 웹훅 URL : 『https://tvextbot-trading.web.app/api/webhook』 웹훅URL을 입력 (※1) ⑦ 얼러트 네임 : 『하이킨아시 업스윙(빗썸ETH)』 를 입력 (※입력하지 않아도 됩니다) ⑧ 메시지 : 『{{strategy.order.alert_message}}』 를 입력 (※2)   (※1) 반드시 본인의 메시지 작성화면에 있는 웹훅URL을 입력해 주세요.\n(※2) 아래의 내용을 복사해서 얼러트에 메시지란에 붙여쓰기 하세요. {{strategy.order.alert_message}}  ※얼러트는 한개만 추가하면 됩니다.\n 궁금한 사항이 있으시면 메일()로 문의를 해주세요.","date":"March 7, 2022","hero":"/posts/strategies/indicator_haus/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/indicator_haus/","summary":"\u003cp\u003e\u003cspan class=\"text-primary\"\u003e\u003cstrong\u003e하이킨아시 업스윙 전략\u003c/strong\u003e\u003c/span\u003e은 하이킨아시를 활용하여 상승하는 추세를 따라가며 상승장에서만 수익을 실현하는 단기매매에 적합한 추세추종 전략입니다.\u003c/p\u003e","tags":["하이킨아시","업스윙","전략"],"title":"하이킨아시 업스윙 전략"},{"categories":["Manual"],"contents":"변동성 돌파 트렌드 전략은 변동성 돌파 기본 전략을 1시간봉과 2시간봉에 최적화하여 롱과 숏 양방향으로 매매가능하도록 수정한 단기 추세 전략입니다.\n 중요사항  EXPERT 사용자 전용 지표입니다.Expert 사용자이외에는 사용하실수 없습니다. 1시간과 2시간봉에만 사용가능합니다. 그이외의 시간봉에서는 사용하지 마세요. 고배율의 레버리지는 사용하지 마세요. 만약 레버리지를 사용하신다면 개인적으로는 2배를 추천드립니다. 지표 사용에 의해서 발생한 매매손실에 대해서는 일체 책임을 지지 않으니 유의하여 주세요.   설명 변동성 돌파 트렌드 전략은 변동성 돌파 기본의 롱 전략과 하이킨아시의 숏 전략을 시간 단위로 적용하여 단기적으로 수익을 실현하기 위한 롱\u0026amp;숏 전략입니다.\n가장 큰 특징은 파인스크립트의 스트래티지를 소스 수정없이 바로 자동매매에 사용할수 있기 때문에 파인스크립트를 몰라도 누구나 간단히 사용할수 있습니다.\n 변동성 돌파 트렌드 전략 보기 백테스트 아래의 백테스트 결과는 바이낸스 선물 ETH/USDT 차트의 2시간봉 기준입니다.(테스트 기간:2018년1월1일~2021년7월26일)  ※ 백테스트는 누구나 사용가능합니다. 아래의 링크를 클릭하여 즐겨찾가에 추가한 다음 직접 테스트를 실시하여 수익률을 확인하세요.\n 변동성 돌파 트렌드 전략 보기 입력항목 설명  인풋 항목  Noise Ratio (Day) (노이즈비율기간) : 30일 BeforeDay Open-Close Volatility (%) (전날 시가종가 변동률) : 7% ToDay Open-Close Volatility (%) (당일 시가종가 변동률) : 7% TakeProfit (%) (익절) : 15% Trailing Stop(%) (트레일링 스탑) : 5% Long Only (롱만 사용) : 체크함 Short Only (숏만 사용) : 체크함 BackTest Period (백테스트 기간) : 2018/ 01 / 01 ~ 2050/12/31 Long Leverage (롱 레버리지) : 1 Short Leverage (숏 레버리지) : 1   ※전날 시가종가 변동률이란 전날 시가와 종가의 변동률이 입력한 값보다 크면 시그널이 발생하더라도 진입을 하지 않습니다.\n※당일 시가종가 변동률이란 시가 대비 진입가가 입력한 값보다 크면 시그널이 발생하더라도 진입을 하지 않습니다.\n※트레일링 스탑이란 진입 이후의 종가에서 \"스탑\"설정한 비율 만큼 하락할 경우 자동으로 포지션을 종료하여 수익 및 손실을 방어하는 주문을 의미합니다. 주문메시지 작성 ※바이낸스 선물 무기한 ETH/USDT (단방향모드사용)를 예로 설명하겠습니다.\n 변동성 돌파 트렌드 전략 자동매매 설정 동영상 가이드   매수 주문메시지 1.주문메시지 작성화면에서 아래와 같이 매수주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ①과②는 차트설정에서 사용합니다. 예) 매수 주문 메시지 내용  거래소 : Binance-Futures (USDT-Ⓜ 선물) 계정 : 본인의 계정을 선택 거래코인 : ETH/USDT 거래방법 : 매수 주문유형 : 시장가 주문수량 : 50%(잔액대비) 포지션 청산후 주문실행 : 체크함 레버리지 : 2x 메모 : 바이낸스 ETH 매수 (변돌트랜트2H)   ※포지션 청산후 주문실행을 반드시 체크하세요. 매도 주문메시지 2.주문메시지 작성화면에서 아래와 같이 매도주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ③과④는 차트설정에서 사용합니다. 예) 매도 주문 메시지 내용  거래소 : Binance-Futures (USDT-Ⓜ 선물) 계정 : 본인의 계정을 선택 거래코인 : ETH/USDT 거래방법 : 매도 주문유형 : 시장가 주문수량 : 50%(잔액대비) 포지션 청산후 주문실행 : 체크함 레버리지 : 2x 메모 : 바이낸스 ETH 매도 (변돌트랜트2H)   ※포지션 청산후 주문실행을 반드시 체크하세요. 청산 주문메시지 3.주문메시지 작성화면에서 아래와 같이 청산주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ⑤과⑥는 차트설정에서 사용합니다. 예) 청산 주문 메시지 내용  거래소 : Binance-Futures (USDT-Ⓜ 선물) 계정 : 본인의 계정을 선택 거래코인 : ETH/USDT 거래방법 : 청산 주문유형 : 시장가 주문수량 : 미입력 (※미입력시 전액 청산) 메모 : 바이낸스 ETH 청산 (변돌트랜트2H)   차트설정  주의사항  매수 얼러트를 설정할때 변동성 돌파 라인을 돌파한 시점에서 얼러트를 추가하면 매수 시그널이 발생하여 매수 주문이 실행 됩니다. 그래서 반드시 아래와 같이 해당 거래소의 API 연결을 차단한후 얼러트를 설정을 해주세요.\n【API키 차단중】  아래의 얼러트 추가를 끝낸후 반드시 API를 연결중으로 해주셔야 합니다.\n【API키 연결중】   4.먼저 사용하실 거래소와 2시간봉을 선택한후 변동성 돌파 트렌드 지표(VBTS)를 불러옵니다.(※ 예는 바이낸스선물 2시간봉 차트입니다.)\n 지표검색창에 『[TVExtBot]Volatility Breakout Trend Strategy(1H\u0026amp;2H)』을 입력  5.차트에 지표를 추가하면 자동적으로 인풋화면이 열려 아래와 같이 위의 주문메시지 작성에서 등록된 주문메시지의 주문ID와 메모를 입력합니다.\n※주문ID와 메모는 주문메시지 작성화면에 있는  을 클릭하면 복사됩니다.   주문ID와 메모 입력하기  Authentification Key (인증키) : 봇 구매시에 메일로 받은 인증키를 입력 Long Entry OrderID (롱진입 주문ID) : ①을 입력 Memo : ②를 입력 Long Close OrderID (롱청산 주문ID) : ⑤을 입력 Memo : ⑥를 입력 Short Entry OrderID (숏진입 주문ID) : ③을 입력 Memo : ④를 입력 Short Close OrderID (숏청산 주문ID) : ⑤을 입력 Memo : ⑥를 입력   ※롱청산 주문ID와 숏청산 주문ID에는 동일한 주문ID를 입력합니다.\n주문ID와 메모 입력후 화면   중요사항  자동매매중에 위의 인풋 항목을 변경할 경우 변경한 내용을 자동매매에 적용하기 위해서는 반드시 기존 얼러트를 삭제하고 새로운 얼러트를 추가하셔야 합니다.  얼러트 설정 얼러트 설정 입력내용  ⑦ 조건 : 『[TVExtBot]VBTS』 를 선택 ⑧ 웹훅 URL : 『https://tvextbot-expert.web.app/api/webhook』 웹훅URL을 입력 (※1) ⑨ 얼러트 네임 : 『바이낸스 ETH (변돌트랜트2H)』 를 입력 (※입력하지 않아도 됩니다) ⑩ 메시지 : 『{{strategy.order.alert_message}}』 를 입력 (※2)   (※1) 반드시 본인의 메시지 작성화면에 있는 웹훅URL을 입력해 주세요.\n(※2) 아래의 내용을 복사해서 얼러트에 메시지란에 붙여쓰기 하세요. {{strategy.order.alert_message}}  ※얼러트는 한개만 추가하면 됩니다.\n 궁금한 사항이 있으시면 메일()로 문의를 해주세요.","date":"March 7, 2022","hero":"/posts/strategies/indicator_vbt/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/indicator_vbt/","summary":"\u003cp\u003e\u003cspan class=\"text-primary\"\u003e\u003cstrong\u003e변동성 돌파 트렌드 전략\u003c/strong\u003e\u003c/span\u003e은 변동성 돌파 기본 전략을 1시간봉과 2시간봉에 최적화하여 롱과 숏 양방향으로 매매가능하도록 수정한 단기 추세 전략입니다.\u003c/p\u003e","tags":["변동성 돌파 트렌드","전략"],"title":"변동성 돌파 트렌드 전략"},{"categories":["Manual"],"contents":"변동성 돌파 플러스 전략은 일 단위로 수익을 실현하는 기존 변동성 돌파 기본 전략을 보완하여 상승 추세가 지속되는한 포지션을 유지하여 수익을 극대화 할수 있도록 수정한 매매 전략입니다.\n 중요사항  EXPERT 사용자 전용 지표입니다. 1일봉에만 사용가능합니다. 그이외의 시간봉에서는 사용하지 마세요. 고배율의 레버리지는 사용하지 마세요. 만약 레버리지를 사용하신다면 개인적으로는 2배를 추천드립니다. 지표 사용에 의해서 발생한 매매손실에 대해서는 일체 책임을 지지 않으니 유의하여 주세요.   설명 변동성 돌파 전략은 일일 단위로 일정 수준 이상의 범위를 뛰어넘는 강한 상승세를 돌파 신호로 상승하는 추세를 따라가며 일 단위로 빠르게 수익을 실현하는 단기매매 전략인데 비해 변동성 돌파 플러스 전략은 일 단위로 수익을 실현하지 않고 상승추세를 계속 이어 갈수 있도록 기존 변동성 돌파 전략을 보완한 중단기 매매 전략입니다.\n아래와 같이 기존 변동성 돌파 전략과 매수 타점은 동일하나 청산 타점이 다음봉 시가가 아닌 상승 추세가 지속하는 한 포지션을 유지하기 때문에 수익을 극대화 할수 있는 장점이 있습니다. 특히 선물보다는 현물차트에서 수익률이 더 높습니다.\n※ 기존 변동성 돌파 전략과는 달리 장기 매매 전략이기 때문에 레버리지를 사용하지 않고 장기간 운용하는걸 추천 드립니다.   변동성 돌파 플러스 전략 보기\n백테스트 아래의 백테스트 결과는 바이낸스 현물 거래소 BTC/USDT 차트의 일봉기준입니다.(테스트 기간:2018년1월1일부터 2021년3월15일까지)  ※ 백테스트는 누구나 사용가능합니다. 아래의 링크를 클릭하여 즐겨찾가에 추가한 다음 직접 테스트를 실시하여 수익률을 확인하세요.\n 변동성 돌파 플러스 전략 보기\n입력항목 설명  인풋 항목  BackTest Period (백테스트 기간) : 2018/ 01 / 01 ~ 2099/12/31 Noise Ratio (Day) (노이즈비율기간) : 30일 BeforeDay Open-Close Volatility (%) (전날 시가종가 변동률) : 6% Leverage (롱 레버리지) : 1 StopLoss (%) (손절) : 7% TakeProfit (%) (익절) : 30%   ※노이즈비율(K)기간이란 노이즈비율(K)을 계산하는데 사용하는 이동평균 기간을 말합니다.(값이 클수록 안정적)\n※전날 시가종가 변동성(%) 이란 전날 시가와 종가의 변동률이 입력한 값보다 크면 매수 시그널이 발생하더라도 진입을 안하는 설정입니다.만약 위와 같이 전날 시가종가 변동성을 6% 입력하면 전날 시가와 종가의 변동률이 6% 이상일 경우 당일 매수 진입을 안합니다.\n(휩소를 방지해서 순익은 증가하고 최대 손실폭은 줄이는 효과가 있습니다.)\n주문메시지 작성  바이낸스 현물 BTC/USDT를 예로 설명하겠습니다.\n 변동성 돌파 플러스 전략 자동매매 설정 동영상 가이드   매수 주문메시지 1.주문메시지 작성화면에서 아래와 같이 매수주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ①과②는 차트설정에서 사용합니다. 예) 매수 주문 메시지 내용  거래소 : Binance 현물 계정 : 본인의 계정을 선택 거래코인 : BTC/USDT 거래방법 : 매수 주문유형 : 시장가 주문수량 : 50%(잔액대비) 메모 : 변동성 돌파 플러스 매수 (바이낸스 BTCUSDT)   매도 주문메시지 2.주문메시지 작성화면에서 아래와 같이 매도주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.  ※주문ID는 메시지를 등록하시면 자동생성됩니다. ③과④는 차트설정에서 사용합니다. 예) 매도 주문 메시지 내용  거래소 : Binance 현물 계정 : 본인의 계정을 선택 거래코인 : BTC/USDT 거래방법 : 매도 주문유형 : 시장가 주문수량 : 100%(잔액대비) 메모 : 변동성 돌파 플러스 매도 (바이낸스 BTCUSDT)   차트설정  주의사항  매수 얼러트를 설정할때 변동성 돌파 라인을 돌파한 시점에서 얼러트를 추가하면 매수 시그널이 발생하여 매수 주문이 실행 됩니다. 그래서 반드시 아래와 같이 해당 거래소의 API 연결을 차단한후 얼러트를 설정을 해주세요.\n【API키 차단중】  아래의 얼러트 추가를 끝낸후 반드시 API를 연결중으로 해주셔야 합니다.\n【API키 연결중】   3.먼저 사용하실 거래소와 1일봉을 선택한후 변동성 돌파 플러스 지표(VBS+)를 불러옵니다.(※ 예는 바이낸스 현물 1일봉 차트입니다.)\n※지표검색창에 『[TVExtBot]Volatility Breakout Plus Strategy』을 입력  4.차트에 지표를 추가하면 자동적으로 인풋화면이 열려 아래와 같이 위의 주문메시지 작성에서 등록된 주문메시지의 주문ID와 메모를 입력합니다.\n※주문ID와 메모는 주문메시지 작성화면에 있는  을 클릭하면 복사됩니다.\n 주문ID와 메모 입력하기  Authentification Key (인증키) : 봇 구매시에 메일로 받은 인증키를 입력 Long Entry OrderID (롱진입 주문ID) : ①을 입력 Memo : ②를 입력 Long Close OrderID (롱청산 주문ID) : ③을 입력 Memo : ④를 입력    주문ID와 메모 입력후 화면   중요사항  자동매매중에 위의 인풋 항목을 변경할 경우 변경한 내용을 자동매매에 적용하기 위해서는 반드시 기존 얼러트를 삭제하고 새로운 얼러트를 추가하셔야 합니다.  얼러트 설정 얼러트 설정 입력내용  ⑤ 조건 : 『[TVExtBot]VBS+』 를 선택 ⑥ 웹훅 URL : 『https://tvextbot-expert.web.app/api/webhook』 웹훅URL을 입력 (※1) ⑦ 얼러트 네임 : 『변동성돌파플러스(바이낸스현물BTC)』 를 입력 (※입력하지 않아도 됩니다) ⑧ 메시지 : 『{{strategy.order.alert_message}}』 를 입력 (※2)   (※1) 반드시 본인의 메시지 작성화면에 있는 웹훅URL을 입력해 주세요.\n(※2) 아래의 내용을 복사해서 얼러트에 메시지란에 붙여쓰기 하세요. {{strategy.order.alert_message}}  ※얼러트는 한개만 추가하면 됩니다.\n 궁금한 사항이 있으시면 메일()로 문의를 해주세요.","date":"March 7, 2022","hero":"/posts/strategies/indicator_vbi_plus/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/indicator_vbi_plus/","summary":"\u003cp\u003e\u003cspan class=\"text-primary\"\u003e\u003cstrong\u003e변동성 돌파 플러스 전략\u003c/strong\u003e\u003c/span\u003e은 일 단위로 수익을 실현하는 기존 변동성 돌파 기본 전략을 보완하여 상승 추세가 지속되는한 포지션을 유지하여 수익을 극대화 할수 있도록 수정한 매매 전략입니다.\u003c/p\u003e","tags":["변동성 돌파 플러스","전략"],"title":"변동성 돌파 플러스 전략"},{"categories":["Manual"],"contents":"변동성 돌파 기본 전략이란 전설적인 트레이더 래리 윌리엄스 (Larry R. Williams) 의 변동성 돌파 전략을 기본으로 개발한 전략입니다.\n 중요사항   ADVANCED 와 EXPERT 사용자 전용 지표입니다. 1일봉에만 사용가능합니다. 그이외의 시간봉에서는 사용하지 마세요. 고배율의 레버리지는 사용하지 마세요. 만약 레버리지를 사용하신다면 개인적으로는 2배를 추천드립니다. 지표 사용에 의해서 발생한 매매손실에 대해서는 일체 책임을 지지 않으니 유의하여 주세요.   설명  업데이트 정보  평균 노이즈비율(K)을 계산하는데 사용하는 기간을 변경할수 있도록 수정하였습니다.(※값이 높을수록 안정적)\n 전날 시가 종가 변동성(%) 기능을 추가하여 순익은 증가하고 최대 손실폭은 줄어들어 보다 수익은 극대화되고 보다 더 안정적인 매매가 가능하게 되었습니다. ※ 자세한 설정에 대해서는 아래의 내용을 참고해 주세요.  변동성 돌파 전략은 일일 단위로 일정 수준 이상의 범위를 뛰어넘는 강한 상승세를 돌파 신호로 상승하는 추세를 따라가며 일 단위로 빠르게 수익을 실현하는 단기매매 전략입니다.\n변동성 돌파 전략은 다음과 같은 간단한 규칙으로 작동합니다.\n① 전날의 일봉 기준 range(= 전일 고가 – 전일 저가)를 계산합니다.\n② 당일 장중 가격이 당일시가 + (전일 range 값 * K)을 넘을 경우 매수 합니다. (K = 노이즈비율)\n③ 익일 시가 기준으로 지정가 매도를 합니다.\n  왼쪽이 전일 봉, 오른쪽이 당일 봉입니다. 먼저 range는 전일 고가에서 전일 저가를 뺀 값(1,000만원-900만원=100만원)이고, 당일 매수 가격은 시가에서 (range * K값)을 더한 값(960만원+100만원*0.6=1,020만원)입니다. 따라서, 만약 익일 시가가 1,100만원 일 경우는 (1,100/1,020)-1 = 7.84% 만큼 버는 것이고, 1,000만원 일 경우 (1,000/1,020)-1 = -1.96% 만큼 잃는 것입니다.   ※ K값(노이즈비율)은 시장과 종목의 추세 수준이 변화하는것에 대응해 실시간으로 변동합니다.\n가격이 한방향으로 지속적으로 움직인다(추세적)면 노이즈가 적으며 가격이 횡보를 하면(비추세적) 노이즈가 많다는 의미입니다.\n일정기간의 평균 노이즈비율을 계산하여 적용하기 때문에 K값이 높으면 비추세로 판단하여 진입시점을 높게 잡으며 K값이 낮으면 추세라고 판단하여 진입시점을 낮게 잡기 때문에 빨리 추세를 탈수 있습니다.   변동성 돌파 기본 전략 보기 백테스트 아래의 백테스트 결과는 바이빗 거래소 일봉기준입니다.(테스트 기간:2020년1월부터 2021년8월일까지)  ※ 백테스트는 누구나 사용가능합니다. 아래의 링크를 클릭하여 즐겨찾가에 추가한 다음 직접 테스트를 실시하여 수익률을 확인하세요.\n 변동성 돌파 기본 전략 보기 입력항목 설명  인풋 항목  Noise Ratio (Day) (노이즈비율기간) : 30일 BeforeDay Open-Close Volatility (%) (전날 시가종가 변동률) : 7% BackTest Period (백테스트 기간) : 2020/ 01 / 01 ~ 2099/12/31 Leverage (롱 레버리지) : 1    ※노이즈비율(K)기간이란 노이즈비율(K)을 계산하는데 사용하는 이동평균 기간을 말합니다.(값이 클수록 안정적)\n※전날 시가종가 변동성(%) 이란 전날 시가와 종가의 변동률이 입력한 값보다 크면 매수 시그널이 발생하더라도 진입을 안하는 설정입니다.만약 위와 같이 전날 시가종가 변동성을 7% 입력하면 전날 시가와 종가의 변동률이 7% 이상일 경우 당일 매수 진입을 안합니다.\n(휩소를 방지해서 순익은 증가하고 최대 손실폭은 줄이는 효과가 있습니다.사용하지 않을 경우에는 0을 입력하세요.)\n 주문메시지 작성 바이빗 선물 무기한 ETH/USD를 예로 설명하겠습니다.\n 변동성 돌파 기본 전략 자동매매 설정 동영상 가이드   매수 주문메시지 1.주문메시지 작성화면에서 아래와 같이 매수주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.   주문ID는 메시지를 등록하시면 자동생성됩니다. ①과②는 차트설정에서 사용합니다. 예) 매수 주문 메시지 내용  거래소 : Bybit 계정 : 본인의 계정을 선택 거래코인 : ETH/USD 거래방법 : 매수 주문유형 : 시장가 주문수량 : 50%(잔액대비) 레버리지 : 2x 메모 : 변동성 돌파 기본 매수 (바이빗 ETHUSD)   청산 주문메시지 2.주문메시지 작성화면에서 아래와 같이 청산주문에 필요한 내용을 입력하여 메시지등록 버튼을 클릭합니다.   주문ID는 메시지를 등록하시면 자동생성됩니다. ③과④는 차트설정에서 사용합니다. 예) 청산 주문 메시지 내용  거래소 : Bybit 계정 : 본인의 계정을 선택 거래코인 : ETH/USD 거래방법 : 청산 주문유형 : 시장가 주문수량 : 미입력 (※미입력시 전액 청산) 메모 : 변동성 돌파 기본 청산 (바이빗 ETHUSD)   차트설정  주의사항  매수 얼러트를 설정할때 변동성 돌파 라인을 돌파한 시점에서 얼러트를 추가하면 매수 시그널이 발생하여 매수 주문이 실행 됩니다. 그래서 반드시 아래와 같이 해당 거래소의 API 연결을 차단한후 얼러트를 설정을 해주세요.\n【API키 차단중】  아래의 얼러트 추가를 끝낸후 반드시 API를 연결중으로 해주셔야 합니다.\n【API키 연결중】   3.먼저 사용하실 거래소와 1일봉을 선택한후 변동성 돌파 기본 지표(VBS)를 불러옵니다.(※ 예는 바이빗 1일봉 차트입니다.)\n 지표검색창에 『[TVExtBot]Volatility Breakout Strategy』을 입력  4.차트에 지표를 추가하면 자동적으로 인풋화면이 열려 아래와 같이 위의 주문메시지 작성에서 등록된 주문메시지의 주문ID와 메모를 입력합니다.\n 주문ID와 메모는 주문메시지 작성화면에 있는  을 클릭하면 복사됩니다.\n 주문ID와 메모 입력하기  Authentification Key (인증키) : 봇 구매시에 메일로 받은 인증키를 입력 Long Entry OrderID (롱진입 주문ID) : ①을 입력 Memo : ②를 입력 Long Close OrderID (롱청산 주문ID) : ③을 입력 Memo : ④를 입력     주문ID와 메모 입력후 화면   중요사항 자동매매중에 위의 인풋 항목을 변경할 경우 변경한 내용을 자동매매에 적용하기 위해서는 반드시 기존 얼러트를 삭제하고 새로운 얼러트를 추가하셔야 합니다.  얼러트 설정 얼러트 설정 입력내용  ⑤ 조건 : 『[TVExtBot]VBS』 를 선택 ⑥ 웹훅 URL : 『https://tvextbot-expert.web.app/api/webhook』 웹훅URL을 입력 (※1) ⑦ 얼러트 네임 : 『변동성돌파기본(바아빗ETH)』 를 입력 (※입력하지 않아도 됩니다) ⑧ 메시지 : 『{{strategy.order.alert_message}}』 를 입력 (※2)   (※1) 반드시 본인의 메시지 작성화면에 있는 웹훅URL을 입력해 주세요.\n(※2) 아래의 내용을 복사해서 얼러트에 메시지란에 붙여쓰기 하세요. {{strategy.order.alert_message}}   얼러트는 한개만 추가하면 됩니다.\n 궁금한 사항이 있으시면 메일()로 문의를 해주세요.","date":"March 7, 2022","hero":"/posts/strategies/indicator_vbi/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/indicator_vbi/","summary":"\u003cp\u003e\u003cspan class=\"text-primary\"\u003e\u003cstrong\u003e변동성 돌파 기본 전략\u003c/strong\u003e\u003c/span\u003e이란 전설적인 트레이더 래리 윌리엄스 (Larry R. Williams) 의 변동성 돌파 전략을 기본으로 개발한 전략입니다.\u003c/p\u003e","tags":["변동성 돌파 기본","전략"],"title":"변동성 돌파 기본 전략"},{"categories":["Manual"],"contents":" 수렴 또는 횡보하는 차트에서 상방으로 이탈할때에는 매수하고 하방으로 이탈할때에는 매도하는 돌파매매를 할때 유용하게 사용할수 있는 지표를 만들어 보았습니다.\n 지표를 사용하고 싶으신분은  메일로 트레이딩뷰의 아이디와 함께 연락주시면 해당 스크립트를 공유해드리겠습니다.\n 설명 타이틀에서도 알수 있듯이 자동지표가 아닌 수동지표 즉 진입가격, 손절 익절 가격은 사용자가 직접 설정합니다.\n수렴 또는 횡보하는 구간에서는 어느방향으로 이탈할지 모르기 때문에 이 지표를 이용해서 상방으로 이탈할 경우를 대비해 매수진입가격, 손절과 익절가격을 입력합니다.\n반대로 하방으로 이탈할 경우를 대비해 매도진입가격과 그리고 손절 익절가격을 입력합니다.\n이 지표의 특징은 만약 매수진입후 매도진입가격과 매도손절 또는 매도익절가격에 도달해도 얼러트가 울리지 않습니다.\n매수진입후에는 매수손절 또는 매수익절가격에 도달해야만 얼러트가 실행됩니다.\n반대로 매도진입후에는 매도손절 또는 매도익절가격에 도달해야만 얼러트가 실행됩니다.\n사용방법 간단히 지표사용방법에 대해서 알아보겠습니다.\n1.처음에 지표를 트레이딩뷰에 추가하면 아무것도 표시되지 않을껍니다.\n그상태에서 지표의 설정을 클릭하여 입력창을 표시하면 아래와 같이 입력할수 있는 항목이 표시됩니다.  위와 같이 매매를 시작할 시간(입력 지점)과 매수가격, 매수익절가격,매수손절가격,매도가격,매도익절가격,매도손절가격을 설정합니다.\n2.그러면 아래처럼 매매 시작 시간부터 배경색이 노란색으로 바뀝니다.\n그리고 매수/매도 익절/손절 가격이 설정됩니다.\n아직 차트가 매수 또는 매도 라인에 닫지 않았기 때문에 비활성화상태(회색) 입니다.  3.이후 아래와 같이 매수진입라인을 돌파하면 매수진입표시(파란색)가 생기며 얼러트 추가시 얼러트가 발생합니다. 그리고 매수익절(초록색)/손절라인(빨간색)이 활성화 됩니다.  4.만약 매수손절라인을 돌파하면 매수손절표시가 생기고 매수손절 얼러트 설정시 얼러트가 발생합니다. 그리고 매수가 청산되었기때문에 매수진입 매수익절/손절문자들도 회색으로 바뀌어 비활성화됩니다.  매도역지정매매도 위의 매수역지정매매와 동일한 방법입니다.\n얼러트설정방법 1.얼러트추가 버튼을 클릭하여 아래와 같이 롱(매수)진입 얼러트를 설정하세요.  2.얼러트추가 버튼을 클릭하여 아래와 같이 롱(매수)익절 얼러트를 설정하세요.  3.얼러트추가 버튼을 클릭하여 아래와 같이 롱(매수)손절 얼러트를 설정하세요.  4.얼러트추가 버튼을 클릭하여 아래와 같이 숏(매도)진입 얼러트를 설정하세요.  5.얼러트추가 버튼을 클릭하여 아래와 같이 숏(매도)익절 얼러트를 설정하세요.  6.얼러트추가 버튼을 클릭하여 아래와 같이 숏(매도)손절 얼러트를 설정하세요.  TVExtBot과 연동하여 사용할수 있는 양방향 역지정매매를 위한 지표에대해 설명을 드렸습니다.\n궁금한점이 있으시면  메일로 문의해 주세요.\n","date":"March 6, 2022","hero":"/posts/strategies/indicator_bo/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/indicator_bo/","summary":"\u003cblockquote\u003e\n\u003cp\u003e수렴 또는 횡보하는 차트에서 상방으로 이탈할때에는 매수하고 하방으로 이탈할때에는 매도하는 돌파매매를 할때 유용하게 사용할수 있는 지표를 만들어 보았습니다.\u003cbr\u003e\n\u003cspan class=\"text-primary\"\u003e\u003ci class=\"fa fa-info-circle\"\u003e\u003c/i\u003e 지표를 사용하고 싶으신분은 \u003ca class=\"text-default\" href=\"mailto:tvextbot@gmail.com\" target=\"_blank\"\u003e\u003ci class=\"fa fa-envelope\"\u003e\u003c/i\u003e 메일\u003c/a\u003e로 트레이딩뷰의 아이디와 함께 연락주시면 해당 스크립트를 공유해드리겠습니다.\u003c/span\u003e\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["양방향","역지정매매"],"title":"양방향 역지정매매 수동지표"},{"categories":["Manual"],"contents":" 파인스크립트의 전략(strategy)를 사용해서 자동매매하는 방법에 대한 내용입니다.\n어느정도 파인스크립트에 대한 기본지식이 필요하니 파인스크립트 기초  를 참고해 주세요.\n 전략(strategy) 스크립트 준비하기 ※ 파인스크립트 버전 4 이상에서만 사용가능합니다.(//@version=4)\n 파인스크립트  1//@version=4 2strategy(\u0026#34;샘플전략\u0026#34;, overlay=true) 3 4// Create Indicator\u0026#39;s 5shortSMA = sma(close, 10) 6longSMA = sma(close, 30) 7rsi = rsi(close, 14) 8atr = atr(14) 9 10// Specify crossover conditions 11longCondition = crossover(shortSMA, longSMA) 12shortCondition = crossunder(shortSMA, longSMA) 13 14// Execute trade if condition is True 15if (longCondition) 16 stopLoss = low - atr * 2 17 takeProfit = high + atr * 2 18 strategy.entry(\u0026#34;long\u0026#34;, strategy.long, 100, when = rsi \u0026gt; 50) 19 strategy.exit(\u0026#34;exit\u0026#34;, \u0026#34;long\u0026#34;, stop=stopLoss, limit=takeProfit) 20 21if (shortCondition) 22 stopLoss = high + atr * 2 23 takeProfit = low - atr * 2 24 strategy.entry(\u0026#34;short\u0026#34;, strategy.short, 100, when = rsi \u0026lt; 50) 25 strategy.exit(\u0026#34;exit\u0026#34;, \u0026#34;short\u0026#34;, stop=stopLoss, limit=takeProfit) 26 27// Plot Moving Average\u0026#39;s to chart 28plot(shortSMA) 29plot(longSMA, color=color.black) ※ 설명을 위한 샘플입니다.실제 매매에는 사용하지 마세요.\n앞으로 수정할 코드는 위의 소스에서 18번째,19번째,24번째,25번째줄입니다.\n설명  18번째줄에서 매수진입을 하여 19번째에서 매수청산을 합니다. 24번째줄에서 매도진입을 하여 25번째에서 매도청산을 합니다.   바이빗 거래소 1시간봉 차트의 백테스트 결과입니다.  전략(strategy에 주문메시지 설정하기   단축 주문메시지를 사용하시면 주문내용을 변경해도 스크립트를 수정하실 필요없습니다. 사용방법은 기존 주문메시지와 동일합니다. 자세한 내용은  단축 주문메시지 사용법 링크를 참고해 주세요.\n 위의 전략에 맞게 3개의 주문메시지를 작성합니다.(바아빗기준)\n 매수용 주문메시지 TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;buy\u0026#34;,\u0026#34;bal_pct\u0026#34;:50,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT\n 매도용 주문메시지 TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;sell\u0026#34;,\u0026#34;bal_pct\u0026#34;:50,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT\n 청산용 주문메시지 TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;close\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT 위의 주문메시지를 아래와 같이 전략 스크립트에 추가합니다. 1//@version=4 2strategy(\u0026#34;샘플전략\u0026#34;, overlay=true) 3 4// Create Indicator\u0026#39;s 5shortSMA = sma(close, 10) 6longSMA = sma(close, 30) 7rsi = rsi(close, 14) 8atr = atr(14) 9 10// Specify crossover conditions 11longCondition = crossover(shortSMA, longSMA) 12shortCondition = crossunder(shortSMA, longSMA) 13 14// Execute trade if condition is True 15if (longCondition) 16 stopLoss = low - atr * 2 17 takeProfit = high + atr * 2 18 strategy.entry(\u0026#34;long\u0026#34;, strategy.long, 100, when = rsi \u0026gt; 50, alert_message=\u0026#39;TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;buy\u0026#34;,\u0026#34;bal_pct\u0026#34;:50,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT\u0026#39;) 19 strategy.exit(\u0026#34;exit\u0026#34;, \u0026#34;long\u0026#34;, stop=stopLoss, limit=takeProfit, alert_message=\u0026#39;TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;close\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT\u0026#39;) 20 21if (shortCondition) 22 stopLoss = high + atr * 2 23 takeProfit = low - atr * 2 24 strategy.entry(\u0026#34;short\u0026#34;, strategy.short, 100, when = rsi \u0026lt; 50, alert_message=\u0026#39;TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;sell\u0026#34;,\u0026#34;bal_pct\u0026#34;:50,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT\u0026#39;) 25 strategy.exit(\u0026#34;exit\u0026#34;, \u0026#34;short\u0026#34;, stop=stopLoss, limit=takeProfit, alert_message=\u0026#39;TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit-testnet\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;close\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰\u0026#34;}:MVT\u0026#39;) 26 27// Plot Moving Average\u0026#39;s to chart 28plot(shortSMA) 29plot(longSMA, color=color.black)\n strategy.entry함수와 strategy.exit함수에 alert_message 속성을 추가한뒤 위의 주문메시지를 설정합니다.\n※ 여기서 중요한건 alert_message에 주문메시지를 설정할때 쌍따옴표(\u0026quot;)가 아니라 따움표(\u0026rsquo;)로 해야합니다. (예) alert_message=\u0026lsquo;주문메시지\u0026rsquo;\n 얼러트 설정하기 아래와 같이 얼러트를 추가합니다.  메시지란에 {{strategy.order.alert_message}} 을 설정합니다.  ※ 4개의 시그널이 발생하지만 얼러트는 하나만 설정하면 됩니다.\n","date":"March 6, 2022","hero":"/posts/strategies/strategy_alert/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/strategy_alert/","summary":"\u003cblockquote\u003e\n\u003cp\u003e파인스크립트의 전략(strategy)를 사용해서 자동매매하는 방법에 대한 내용입니다.\u003cbr\u003e\n어느정도 파인스크립트에 대한 기본지식이 필요하니 \u003ca href=\"/posts/strategies/pinescript\"\u003e파인스크립트 기초\u003c/a\u003e \u003ci class=\"fas fa-external-link-alt\"\u003e\u003c/i\u003e 를 참고해 주세요.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["파인스크립트","전략"],"title":"파인스크립트 전략을 사용하여 자동매매하는 방법"},{"categories":["Manual"],"contents":" 파인(Pine)스크립트란 트레이딩뷰 플랫폼상에서 실행가능한 스크립트이며 코딩하기 위해 Pine에디터를 제공하고 있습니다.\n종류로는 지표와 전략 스크립트가 있으며 지표는 차트의 보조지수로 활용하고 전략은 백테스팅이 가능합니다.\n 이번 장에서는 파인에디터를 이용하여 파인스크립트 개발에 필요한 기초적인 내용에 대해 다루어 보기로 합니다.\n지표스크립트 작성방법 1.아래의 차트에서 Pine에디터 탭을 클릭합니다.\n  그러면 Pine에디터 상에 아래와 같이 미리 준비된 템플릿 코드가 나타납니다.\n 파인스크립트 1//@version=5 2indicator(\u0026#34;내 스크립트\u0026#34;) 3plot(close)\n설명  첫째줄은 Pine스크립트의 버젼을 나타내고 둘째줄은 지표 선언이며 괄호내는 타이틀을 나타냅니다. 지표 스크립트 작성시는 indicator함수(v5이후)를 사용하며 전략 스크립트를 작성할 경우는 strategy함수로 선언합니다. 세째줄에서 close는 캔들의 종가를 의미하며 plot는 캔들의 종가를 차트상에 그릴때 사용합니다.   2.아래의 [차트에 넣기]를 클릭하면 빨간 박스내에 종가를 이은 차트가 나타납니다.\n(빨간 박스내의 왼쪽 상단 \"내 스크립트\"는 타이틀을 의미합니다)\n 3.다음에는 간단하게 이동 평균선을 이용한 차트를 그려 보겠습니다.\n기존의 코드를 삭제하고 아래의 코드를 붙여쓰기 한 후 [차트에 넣기]를 실행해 봅니다.\n 파인스크립트 1//@version=5 2indicator(\u0026#34;이동평균선그리기\u0026#34;, overlay=true) 3ma = ta.sma(close,21) 4plot(ma)  설명  첫째줄과 둘째줄은 이전 설명과 동일하지만 다른점이 있다면 indicator함수에 [overlay]라는 속성이 추가되어 있습니다.  [overlay=true]은 BTC원화 차트위에 이동평균선을 겹치게 표시(오버레이)하는 속성입니다. 셋째줄은 sma라는 이동평균선을 나타내는 내장함수로써 두개의 파라메터인 캔들의 종가를 나타내는close와 날짜를 의미하는 21을 설정하여 ma라는 변수에 저장하고 있습니다.  즉 21일간의 캔들종가의 이동평균선을 의미합니다. 넷째줄 plot는 이동평균선을 차트상에 그릴때 사용합니다.   4.차트상에 이동평균선이 눈에 잘 띄지 않기 때문에 선의 색과 굵기를 바꾸어 보겠습니다.\n [color]속성에는 orange를 지정하고 [linewidth]속성에는 굵기를 3으로 지정합니다\n 파인스크립트 1//@version=5 2indicator(\u0026#34;이동평균선그리기\u0026#34;, overlay=true) 3ma = ta.sma(close,21) 4plot(ma, color=color.orange, linewidth=3)\n 그럼 아래와 같이 굵고 오렌지색의 이동평균선이 나타나는걸 확인 할 수 있습나다.\n 5.그 다음 [저장]버튼을 클릭하여 지표 스크립트를 저장합니다.\n 전략스크립트 작성방법  다음은 전략스크립트 작성방법에 대해 알아 보겠습니다.\n 6.아래의 Pine에디터에서 [열기] 메뉴를 클릭하여 스트래티지를 선택합니다.\n  그러면 아래와 같이 미리 준비된 전략 스크립트의 템플릿이 나타난것을 확인할 수 있습니다.  파인스크립트 1//@version=5 2strategy(\u0026#34;내 전략\u0026#34;, overlay=true) 3 4longCondition = ta.crossover(ta.sma(close, 14), ta.sma(close, 28)) 5if (longCondition) 6 strategy.entry(\u0026#34;My Long Entry Id\u0026#34;, strategy.long) 7 8shortCondition = ta.crossunder(ta.sma(close, 14), ta.sma(close, 28)) 9if (shortCondition) 10 strategy.entry(\u0026#34;My Short Entry Id\u0026#34;, strategy.short)\n설명  첫째줄은 Pine스크립트의 버젼을 나타내고 둘째줄은 전략 선언이며 괄호내는 타이틀을 나타냅니다. 전략 스크립트 작성시는 strategy함수를 선언합니다. 네째줄에서 crossover함수내의 파라메터로 첫번째 sma(close, 14)이고 두번째가 sma(close, 28)입니다. 즉 14일 캔들종가의 이동평균선이 28일 캔들종가의 이동평균선을 위로 크로스되었을떄 longCondition변수에 true를 저장합니다. 반대로 위로 크로스 안되었을 경우에는 false를 저장합니다. 다섯번째줄은 longCondition변수가true인경우(14일 이평이 28일 이평을 위로 크로스) 여섯번째줄을 실행합니다.  여섯번째줄의 strategy.entry함수는 매수 또는 매도할때 사용하는 오더 명령어입니다. 첫번째 파라메터 \"My Long Entry Id\"는 차트상에 표시되는 문자이며 두번째 strategy.long는 매수를 의미합니다. 8에서 10번째줄은 4에서 6번째줄의 반대의 의미입니다.   7.[차트에 넣기]를 클릭하면 아래와 같이 매수 지점과 매도 지점이 표시되고 백테스팅 결과도 함께 확인할 수 있습니다.\n  마지막으로 [저장]버튼을 클릭하여 \"내 전략\"이라는 이름으로 차트를 저장합니다.\n 참고로 14일 이동평균선과 28일 이동평균선을 위에서 배운 plot함수를 이용하여 차트에 표시하여 보겠습니다.\n아래와 같이 14일 이동평균선은 파란색 28일 이동평균선은 빨간색으로 코드를 수정하여 저장버튼을 클릭합니다.\n 파인스크립트 1//@version=5 2strategy(\u0026#34;내 전략\u0026#34;, overlay=true) 3 4sma14 = ta.sma(close, 14) 5sma28 = ta.sma(close, 28) 6plot(sma14, color=color.blue, linewidth=2) 7plot(sma28, color=color.red, linewidth=2) 8 9longCondition = ta.crossover(ta.sma(close, 14), ta.sma(close, 28)) 10if (longCondition) 11 strategy.entry(\u0026#34;My Long Entry Id\u0026#34;, strategy.long) 12 13shortCondition = ta.crossunder(ta.sma(close, 14), ta.sma(close, 28)) 14if (shortCondition) 15 strategy.entry(\u0026#34;My Short Entry Id\u0026#34;, strategy.short)\n 얼러트 설정방법 얼러트를 설정하기 위해서는 아래의 alertcondition 내장함수를 사용합니다.\n 파인스크립트 alertcondition(condition, title, message)\n설명  첫번째 파라메터인 condition은 true 또는 false 지정이 가능합니다. true 를 지정한경우는 얼러트를 실행하며 false 인경우는 얼러트를 실행하지 않습니다. 두번째 파라메터인 title 은 얼러트의 타이틀을 지정합니다. 세번째 파라메터인 message 는 얼러트 실행시 표시하는 메시지를 지정합니다.   그럼 위의 전략 스크립트를 활용하여 얼러트를 설정하여 보겠습니다.\n 파인스크립트 1//@version=5 2indicator(\u0026#34;이평선 얼러트실행\u0026#34;, overlay=true) 3 4sma14 = ta.sma(close, 14) 5sma28 = ta.sma(close, 28) 6plot(sma14, color=color.blue, linewidth=3) 7plot(sma28, color=color.red, linewidth=3) 8 9longCondition = ta.crossover(sma14, sma28) 10alertcondition(longCondition, title = \u0026#34;Buy\u0026#34;, message = \u0026#34;Buy Message!\u0026#34;) 11 12shortCondition = ta.crossunder(sma14, sma28) 13alertcondition(shortCondition, title = \u0026#34;Sell\u0026#34;, message = \u0026#34;Sell Message!\u0026#34;)  위에서 변경된 코드를 살펴보면 두번째, 열번째,열세번째줄입니다.\n설명  두번째줄을 보면 strategy 에서 indicator 함수로 변경되어 있습니다. 여기서 중요한건 alertcondition 함수는 strategy 함수와 함께 사용할 수 없다는 점입니다. 그렇기때문에 반드시 얼러트를 사용하기 위해서는 study 함수로 선언을 해야 합니다. 열번째 longCondition 변수가 true 인 경우 얼러트를 실행하기 위해 첫번째 파라메터에 longCondition을 지정합니다. 즉 14일 이평이 28일 이평을 위로 크로스한 경우에 얼러트를 실행합니다.(매수신호를 나타냄) 두번째 파라메터인 타이틀은 \"Buy\" 을 지정하고 세번째에는 \"Buy Message!\"를 지정합니다. 열세번째는 반대로 shortCondition 변수가 true 인 경우 얼러트를 실행하기 위해 첫번째 파라메터에 shortCondition을 지정합니다. 즉 14일 이평이 28일 이평을 아래로 크로스한 경우에 얼러트를 실행합니다.(매도신호를 나타냄) 두번째 파라메터인 타이틀은 \"Sell\" 을 지정하고 세번째에는 \"Sell Message!\"를 지정합니다.    위의 코드를 저장한 후 [차트에 넣기]를 실행하면 아래의 차트에 추가되는걸 확인할 수 있습니다.\n(※저장시 스크립트이름은 \u0026ldquo;이평선 얼러트실행\u0026quot;로 지정)\n 그 다음은 매수 또는 매도 얼러트를 실행하기위해 얼러트를 추가합니다.\n 매수용 얼러트를 추가   매도용 얼러트를 추가  여기까지 Pine스크립트를 사용하기 위한 기초적인 내용에 대해 다루어 보았습니다.\n보다 더 상세한 내용을 공부하고 싶으신 분은 아래의 사이트를 참조해 주세요.\n참고 사이트  Pine스크립트 메뉴얼 트레이딩뷰 블로그 TradingCode.net(해외사이트 크롬의 한글번역으로 보세요!) Trading View Wiki  ","date":"March 6, 2022","hero":"/posts/strategies/pinescript/images/hero.png","permalink":"https://tvextbot.github.io/posts/strategies/pinescript/","summary":"\u003cblockquote\u003e\n\u003cp\u003e파인(Pine)스크립트란 트레이딩뷰 플랫폼상에서 실행가능한 스크립트이며 코딩하기 위해 Pine에디터를 제공하고 있습니다.\u003cbr\u003e\n종류로는 지표와 전략 스크립트가 있으며 지표는 차트의 보조지수로 활용하고 전략은 백테스팅이 가능합니다.\u003cbr\u003e\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["파인스크립트","기초"],"title":"파인스크립트 기초(v5지원)"},{"categories":["Manual"],"contents":" 각 거래소의 API 발급 방법에 대해서 설명합니다.\n  현재 TVExtBot내에서 사용가능한 거래소 빗썸 업비트 바이빗 현물,선물(USD,USDT) 바이낸스 현물,USDT선물,코인선물 FTX 현물,선물 -- 비트멕스 비트겟 USDT선물,코인선물 페멕스 현물,선물 MEXC 선물 OKX 현물,선물 바이비트 테스트넷 비트멕스 테스트넷 바이낸스선물 테스트넷 페멕스 테스트넷 비트겟 선물 테스트넷 OKX 현물,선물 테스트넷   API키 발급시 고정IP 등록이 필요할 경우 본인의 API키 등록화면에 있는 IP주소를 꼭 등록해 주세요.\n 웹훅URL과 IP주소는 사용하시는 버전에 따라 다릅니다. 꼭 본인의 확장프로그램 설정화면에 있는 웹훅URL과 IP주소를 사용해 주세요.    바이빗 API키 발급 방법  \u0026nbsp;\u0026nbsp; API키 관리화면에서 「Create New Key」를 클릭하면 아래와 같은 화면이 나타납니다.  \u0026nbsp;\u0026nbsp; 위와 같이 입력하여 「Submit」를 클릭한후 생성된 API키와 시크릿키를 복사하여 API등록화면에 등록해 주세요.\n\u0026nbsp;\u0026nbsp; 출금은 절대 체크하지 마세요! \u0026nbsp;\u0026nbsp; 시크릿키는 화면을 닫으면 확인할수 없으니 반드시 메모해 두세요.\n    바이낸스 API키 발급 방법  \u0026nbsp;\u0026nbsp; API키 관리화면에서 라벨명을 기입한후 「Create API」를 클릭하면 아래와 같은 화면이 나타납니다.  \u0026nbsp;\u0026nbsp; 「Edit」를 클릭하여 위와 같이 입력한후 생성된 API키와 시크릿키를 복사하여 API등록화면에 등록해 주세요.\n\u0026nbsp;\u0026nbsp; 출금은 절대 체크하지 마세요!\n\u0026nbsp;\u0026nbsp; 시크릿키는 화면을 닫으면 확인할수 없으니 반드시 메모해 두세요.\n\u0026nbsp;\u0026nbsp; 현물과 선물 둘다 사용할 경우에는 반드시 아래와 같이 동일한 API키를 현물과 선물에 입력하여 등록해 주세요.\n     비트겟 API키 발급 방법  \u0026nbsp;\u0026nbsp; Bitget 거래소에서 API만들기 버튼을 클릭하여 아래의 내용을 입력후 Trade를 체크하여 다음을 클릭합니다. (①을 메모)  \u0026nbsp;\u0026nbsp; 아래의 화면에서 ②와 ③을 메모한후 확인버튼을 클릭합니다.  \u0026nbsp;\u0026nbsp; 시크릿키는 화면을 닫으면 확인할수 없으니 반드시 메모해 두세요.\n\u0026nbsp;\u0026nbsp; 위에서 메모한 ①②③을 아래와 같이 API키 등록화면에 입력하여 등록합니다.      빗썸 API키 발급 방법  \u0026nbsp;\u0026nbsp; API 관리화면에서 아래의 항목을 선택한후 API KEY 생성」을 클릭하여 API를 생성합니다.  \u0026nbsp;\u0026nbsp; 생성된 API에서 활성화 버튼을 클릭하여 승인을 합니다.\n \u0026nbsp;\u0026nbsp; 승인된 API키와 시크릿키를 복사하여 API등록화면에 등록해 주세요.\n\u0026nbsp;\u0026nbsp; 출금은 절대 체크하지 마세요!     업비트 API키 발급 방법  \u0026nbsp;\u0026nbsp; 업비트 로그인 – 고객센터 – Open API 안내 – Open API 사용하기를 순서대로 클릭해 주세요.  \u0026nbsp;\u0026nbsp; 자산조회,주문조회,주문하기를 체크하고 봇의 IP주소를 입력한후 Open API Key 발급받기를 클릭합니다.  \u0026nbsp;\u0026nbsp; Access키와 Secret키를 복사하여 확장프로그램의 API키 등록화면 업비트란에 붙여쓰기를 합니다.  \u0026nbsp;\u0026nbsp; 시크릿키는 화면을 닫으면 확인할수 없으니 반드시 메모해 두세요.     OKX API키 발급 방법  \u0026nbsp;\u0026nbsp; OKX 거래소에서 API만들기 버튼을 클릭하여 아래의 내용을 입력후 Trade를 체크하여 다음을 클릭합니다. (①을 메모)  \u0026nbsp;\u0026nbsp;※Passphrase는 8문자이상으로 대문자,소문자,숫자,특수문자가 포함되도록 입력해 주세요.\n\u0026nbsp;\u0026nbsp; 아래의 화면에서 ②와 ③을 메모한후 확인버튼을 클릭합니다.  \u0026nbsp;\u0026nbsp; 위에서 메모한 ①②③을 아래와 같이 API키 등록화면에 입력하여 등록합니다.   ","date":"March 5, 2022","hero":"/posts/api/images/hero.png","permalink":"https://tvextbot.github.io/posts/api/","summary":"\u003cblockquote\u003e\n\u003cp\u003e각 거래소의 API 발급 방법에 대해서 설명합니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["거래소API","API발급"],"title":"거래소 API 발급 방법"},{"categories":["Manual"],"contents":"각종 거래소의 수수료할인 링크입니다.\n FTX -- 바이낸스 바이빗 비트겟 Phemex MEXC OKX   아래의 추천인 링크로 거래소 계정을 개설하여 한달간 20비트이상 거래해 주신 사용자님에 한해 인증키 기간을 1년간 연장해 드리겠습니다.(10비트이상인경우는 6개월 기간연장) --  FTX 거래소 수수료 15% 할인(현물, 선물) ※ 업계 최저수수료 적용  FTX 거래소의 추천인 링크  를 통해 신규가입을 하시면 현물, 선물 거래수수료 15% 할인을 받을 수 있습니다.  --  OKX 거래소 수수료 평생 50%할인  OKX 거래소의 추천인 링크  를 통해 신규가입을 하시면 거래수수료 평생 50%할인을 받을 수 있습니다. (추천인아이디:27561311)   바이빗 수수료 최대 20% 할인\u0026증정금 혜택  바이빗 거래소의 추천인 링크  를 통해 신규가입을 하시면 바이빗 거래수수료 최대 20% 할인과 최대90달러까지 증정금 을 받을 수 있습니다.\n※ 바이빗의 수수료 할인 정책 변경으로 레퍼럴의 전체 거래량이 200btc를 넘지 못하면 15%만 적용됩니다.   비트겟 거래소 수수료 평생 50%할인  비트겟 거래소의 추천인 링크  를 통해 신규가입을 하시면 거래수수료 평생 50%할인과 첫 충전시 충전금액의 5%(최대 50USDT)을 받을 수 있습니다.   바이낸스 수수료 20% 할인(현물)  바이낸스 거래소의 추천인 링크  를 통해 신규가입을 하시면 바이낸스 현물 거래수수료 20% 할인과 선물 기간한정 10% 수수료 할인을 받을 수 있습니다.   Phemex 거래소 수수료 평생 20%할인  Phemex 거래소의 추천인 링크  를 통해 신규가입을 하시면 거래수수료 평생 20%할인과 최대 $100의 가입 보너스 를 받을 수 있습니다.   MEXC 거래소 수수료 평생 선물60% 현물50% 할인  MEXC거래소의 추천인 링크  를 통해 신규가입을 하시면 거래수수료 평생 선물60% 현물50%를 할인 받을 수 있습니다. ","date":"March 5, 2022","hero":"/posts/referral/images/hero.png","permalink":"https://tvextbot.github.io/posts/referral/","summary":"\u003cp\u003e각종 거래소의 수수료할인 링크입니다.\u003c/p\u003e\n\u003cul\u003e\n\u003c!-- \u003cli\u003eFTX\u003c/li\u003e --\u003e\n\u003cli\u003e바이낸스\u003c/li\u003e\n\u003cli\u003e바이빗\u003c/li\u003e\n\u003cli\u003e비트겟\u003c/li\u003e\n\u003cli\u003ePhemex\u003c/li\u003e\n\u003cli\u003eMEXC\u003c/li\u003e\n\u003cli\u003eOKX\u003c/li\u003e\n\u003c/ul\u003e","tags":["수수료할인","레퍼럴"],"title":"거래소 수수료 할인링크"},{"categories":["Manual"],"contents":" 아래와 같이 ①〜③ 을 순서대로 실행하시면 최신버전으로 업데이트할수 있습니다.\n  ","date":"March 5, 2022","hero":"/posts/update_chrome/images/hero.png","permalink":"https://tvextbot.github.io/posts/update_chrome/","summary":" 아래와 같이 ①〜③ 을 순서대로 실행하시면 최신버전으로 업데이트할수 있습니다.\n  ","tags":["크롬확장프로그램","수동업데이트"],"title":"크롬확장프로그램 수동업데이트 방법"},{"categories":["Manual"],"contents":" 처음 사용하시는 분들을 위한 사용자 가이드입니다.\n  시작하기전에 트레이딩뷰 사이트에 미리 가입하여 주세요.\n얼러트추가에는 회원의 종류에 따라 제한이 있습니다.\n현재(2021년4월 시점) 무료 1개, PRO 10개, PRO+ 30개, 프리미엄 무제한 사용가능 합니다.\n가입에 대한 자세한 내용은 트레이딩뷰 사이트의 사용안내를 확인하여 주세요. ※TVExtBot에서 자동매매를 하기 위해서는 반드시 트레이딩뷰 PRO버전 이상이어야 합니다.\n※TVExtBot의 무료 인증키를 발행하면 한달간 테스트넷에 한해서 무료로 사용가능합니다. \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;(무료 인증키는 확장프로그램내에서 직접 발행 가능하며 거래소에서 API키 생성시 IP등록없이 생성해 주세요)   유의사항 주문메시지에 오류가 있을시에는 자동매매가 이루어지지 않으니 반드시 설정화면의 메시지작성을 통해 작성해 주세요. 트레이딩뷰 사이트의 유지보수나 거래소API장애로 자동매매가 이루어지지 않을수도 있는점 유의하여 주시길 바랍니다 . TVExtBot를 사용시 발생할 수 있는 서비스 장애 또는 발생하는 피해에 대하여는 일체 책임을 지지 않습니다. 위의 내용에 대해서 동의하는 경우에만 TVExtBot를 사용해 주시길 바랍니다.   TVExtBot 간단 사용법 요약 처음 사용하시는분은 반드시 아래의 순서대로 진행해 주세요.\nSTEP\n1 크롬확장프로그램 설치\n 크롬 웹 스토어에서 TVExtBot 확장프로그램 을 설치해 주세요.    STEP\n2 인증키 발급 \u0026 등록\n 무료인증키는 테스트넷에 한해서 한달간 무료로 사용가능합니다. \n유료인증키 구매는 인증키 등록\u0026구매가이드  를 참고해 주세요.\n계좌이체로 구매하실 경우  메일 또는  텔레그램으로 문의해 주세요.     STEP\n3 거래소 API키 등록\n 사용가능한 거래소와 거래소 API 발급은 거래소 API 발급 방법  를 참고해 주세요.\n API키 발급시 고정IP 등록이 필요할 경우 본인의 API키 등록화면에 있는 IP주소 3개를 꼭 등록해 주세요.    STEP\n4 텔레그램 알림봇 설정\n 외출중에도 TVExtBot에서 자동매매되는 주문정보와 에러정보를 실시간으로 받아볼수 있습니다.\n자세한 사용법은 텔레그램 개인 알림봇 사용법 을 참고해 주세요.     STEP\n5 주문메시지 작성\n 자세한 내용은 아래의  주문메시지 작성 편을 참고해 주세요.    STEP\n6 트레이딩뷰 얼러트 설정\n 자세한 내용은 아래의  트레이딩뷰 얼러트 설정 편을 참고해 주세요.     크롬확장프로그램 설치 1.크롬 웹 스토어에서 TVExtBot를 검색한 후 [크롬에 추가] 버튼을 클릭하여 자신의 크롬브라우저에 설치하여 주세요.  chrome 웹 스토어로 바로가기  2.설치 후 아래와 같이 오른쪽 상단의 확장프로그램 아이콘을 클릭한후 TVExtBot의 고정핀을 클릭합니다.  3.TVExtBot 아이콘을 클릭해서 팝업화면의 설정을 선택하면 설정화면으로 이동합니다.  4.설정화면으로 이동하면 아래와 같이 설정화면내의 메시지작성화면을 확인할 수 있습니다.  인증키 발급 \u0026amp; 등록 5.인증키 등록화면에서 무료 인증키 또는 유료인증키를 구매하여 인증키를 등록합니다.\n ※ 유료 인증키 구매에 대한 자세한 내용은  인증키 등록\u0026amp;구매가이드 를 참고해 주세요.\n 은행계좌이체로 송금을 원하실 경우에는  메일 또는  텔레그램으로 문의해 주세요.\n 무료 인증키를 발행하여 등록하면 테스트넷에 한해서 한달간 무료로 사용가능합니다.\n  6.발급 받을때 사용한 이메일과 인증키를 복사하여 아래와 같이 붙여쓰기를 한후 인증하기를 클릭합니다.  거래소 API키 등록  현재 TVExtBot내에서 사용가능한 거래소 빗썸 업비트 바이빗 현물,선물(USD,USDT) 바이낸스 현물,USDT선물,코인선물 FTX 현물,선물 -- 비트멕스 비트겟 USDT선물,코인선물 페멕스 현물,선물 OKX 현물,선물 MEXC 선물 (거래소 사정으로 사용않됨) 바이비트 테스트넷 비트멕스 테스트넷 바이낸스선물 테스트넷 페멕스 테스트넷 비트겟 선물 테스트넷 OKX 현물,선물 테스트넷     각 거래소의 API를 발급하기 위한 자세한 내용은 오른쪽 링크를 확인하세요. [  거래소 API 발급 방법 ]  API키 발급시 고정IP 등록이 필요할 경우 본인의 API키 등록화면에 있는 IP주소를 꼭 등록해 주세요.\n 웹훅URL과 IP주소는 사용하시는 버전에 따라 다릅니다. 꼭 본인의 확장프로그램 설정화면에 있는 웹훅URL과 IP주소를 사용해 주세요.\n 7.API키 등록화면에서 [편집]버튼을 클릭 후 거래소의 API키와 비밀키를 입력하여 [저장]버튼을 클릭해 주세요.\n ※ 유료거래소의 락을 해제하기 위해 인증키를 구입하세요. [  인증키 등록\u0026amp;구매가이드 ]\n8.거래소 연결에 성공하면 아래와 같은 연결성공 메시지와 함께 [연결중]버튼으로 바뀌는 것을 확인할 수 있습니다.   ※ [연결중]으로 안 바뀌는 경우 API키가 제대로 입력되었는지 확인해주세요.\n※ [연결중]버튼을 클릭하면 [차단]으로 변경되어 주문을 중지할 수 있습니다.\n   API키는 각 거래소당 최대 5개까지 등록이 가능합니다.\n 텔레그램 알림봇 설정 9.주문결과와 에러정보를 실시간으로 알림 메시지를 받아 볼수 있는 텔레그램 알림봇을 설정합니다.  반드시 설정해 두세요.\n ※ 자세한 내용은  텔레그램 개인 알림봇 사용법 를 참고해 주세요.\n  주문메시지 작성  주문메시지에는 기존 사용해온 긴 주문메시지와 새로추가된 단축 주문메시지 2종류가 있습니다.(※얼러트 설정방법은 동일)\n기존 주문메시지는 수정하면 트레이딩뷰의 얼러트를 다시 설정해야 하는 불편함이 있지만 단축 주문메시지는 주문ID와 연동되어 클라우드 서버에 저장되기 때문에 얼러트를 다시 설정할 필요가 없습니다.\n 단축 주문메시지란 기존의 긴 주문메시지의 단점을 보완하기 위해 짧은 형태로 줄인 주문메시지를 말합니다.\n 단축 주문메시지에 대한 자세한 사용법은  단축 주문메시지 사용법 링크를 참고해 주세요.\n  유의사항   1분이내에 하나의 거래소에서 최대 10회 이상의 주문을 실행할 수 없습니다.\n만약 1분이내의 10회 이상의 주문을 했을 경우 11회부터는 무시됩니다. (다시 1분후에는 정상적으로 매매 가능)  트레이딩뷰의 얼러트 메시지란에 추가할수 있는 주문메시지는 최대 10개까지 입력가능합니다.\n(하나의 얼러트로 최대 10개까지 주문을 실행할수 있습니다.) ※ 바이낸스에서 1분간 2400회 이상의 요청(주문)이 발생하면 바이낸스 서버가 디도스공격으로 인식해 봇서버의 IP가 차단되어 일시적으로 주문이 안되는 문제가 발생합니다.이로 인해 분당 최대주문횟수를 10회로 제한하니 양해해 주시기를 바랍니다.  --    공개지표인 슈퍼트랜드지표를 이용하여 롱시그널 발생시 청산→매수, 숏시그널 발생시 청산→매도를 예로 설명하겠습니다.\n 아래의 설명은 기존 사용해온 긴 주문메시지를 사용한 예입니다만 단축 주문메시지로 변경해서 사용해도 무방합니다.\n10.메시지 작성화면에서 트레이딩뷰의 얼러트에 설정할 주문 메시지를 매수, 매도, 청산순으로 작성합니다.\n 주문 메시지는 반드시 메시지 작성화면을 통해 작성하여 주세요!\n예) 아래의 내용을 입력 (매수용 주문 메시지)  거래소 : Bybit 거래코인 : BTC/USD 거래마켓 : USD 거래방법 : 매수 주문유형 : 지정가 주문가격 : LAST (마지막 체결가격) 주문가격대비 퍼센트(%) : 입력 안함 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;※ 입력을 안할 경우 마지막 체결가로 매수 주문 주문수량(%) : 잔액대비 30 입력 레버리지 : 1배    매수주문 입력화면   매수메시지 출력결과 TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;limit\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;buy\u0026#34;,\u0026#34;bal_pct\u0026#34;:30,\u0026#34;price\u0026#34;:\u0026#34;last\u0026#34;,\u0026#34;leverage\u0026#34;:1,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT\n예) 아래의 내용을 입력 (매도용 주문 메시지)  거래소 : Bybit 거래코인 : BTC/USD 거래마켓 : USD 거래방법 : 매도 주문유형 : 지정가 주문가격 : LAST (마지막 체결가격) 주문가격대비 퍼센트(%) : 입력 안함 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;※ 입력을 안할 경우 마지막 체결가로 매도 주문 주문수량(%) : 잔액대비 30 입력 레버리지 : 1배    매도주문 입력화면   매도메시지 출력결과 TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;limit\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;sell\u0026#34;,\u0026#34;bal_pct\u0026#34;:30,\u0026#34;price\u0026#34;:\u0026#34;last\u0026#34;,\u0026#34;leverage\u0026#34;:1,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT\n예) 아래의 내용을 입력 (청산용 주문 메시지)  거래소 : Bybit 거래코인 : BTC/USD 거래마켓 : USD 거래방법 : 청산 주문유형 : 시장가 주문수량(%) : 미입력시에는 100%입니다.(분할청산시는 청산할 수량%을 입력하세요)    청산주문 입력화면   청산메시지 출력결과 TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;close\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT\n트레이딩뷰 얼러트 설정   웹훅URL은 등록하신 인증키의 버전에 따라 다릅니다.얼러트의 웹훅URL 설정시 주의하여 주세요.\n※ 본인의 인증키 버전과 다른 웹훅URL을 사용하면 주문에러가 발생하니 주문메시지 작성화면에 있는 웹훅URL을 꼭 사용해 주세요.\n※ 트라이얼 버전은 인증키 등록화면에 있는 [무료인증키 발행하기] 링크를 통해 무료로 발행할 수 있습니다.\n 11.Bybit의 BTCUSD 차트를 선택하여 슈퍼트랜드지표를 불러옵니다.\n 슈퍼트랜드지표는 테스트용 지표입니다. 실거래에는 사용하지 마세요.  12.1시간봉 기준으로 아래의 long시그널 발생시 청산→매수 short시그널 발생시 청산→매도를 설정하겠습니다.  13.얼러트추가[+]버튼을 클릭하여 조건에 SuperTrend와 Buy를 옵션에서 [봉닫힐때 한번]을 선택한후 메시지란에 청산과 매수 메시지를 복사\u0026amp;붙여쓰기를 합니다.\n ※ 웹훅URL은 본인의 주문메시지 작성화면에 있는 웹훅URL을 복사하여 붙여쓰기 해주세요.\n  매수용 얼러트를 추가   매수용 얼러트 메시지란 설정내용 (여러개의 주문메시지 설정가능) TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;close\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;limit\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;buy\u0026#34;,\u0026#34;bal_pct\u0026#34;:30,\u0026#34;price\u0026#34;:\u0026#34;last\u0026#34;,\u0026#34;leverage\u0026#34;:1,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT 14.얼러트추가[+]버튼을 클릭하여 조건에 SuperTrend와 Sell를 옵션에서 [봉닫힐때 한번]을 선택한후 메시지란에 청산과 매도 메시지를 복사\u0026amp;붙여쓰기를 합니다.\n ※ 웹훅URL은 본인의 주문메시지 작성화면에 있는 웹훅URL을 복사하여 붙여쓰기 해주세요.\n  매도용 얼러트를 추가   매도용 얼러트 메시지란 설정내용 (여러개의 주문메시지 설정가능) TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;market\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;close\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT TVM:{\u0026#34;exchange\u0026#34;:\u0026#34;bybit\u0026#34;,\u0026#34;account\u0026#34;:\u0026#34;*\u0026#34;,\u0026#34;symbol\u0026#34;:\u0026#34;BTC/USD\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;limit\u0026#34;,\u0026#34;side\u0026#34;:\u0026#34;sell\u0026#34;,\u0026#34;bal_pct\u0026#34;:30,\u0026#34;price\u0026#34;:\u0026#34;last\u0026#34;,\u0026#34;leverage\u0026#34;:1,\u0026#34;token\u0026#34;:\u0026#34;토큰정보\u0026#34;}:MVT\n15.아래와 같이 얼러트가 추가된것을 확인할 수 있습니다.  16.설정은 여기까지 입니다. 다음은 TVExtBot가 설정한 주문메시지를 통해 자동매매를 실행합니다.\n 참고사이트 높은 승률로 자동매매를 하기위해서는 보다 더 정교한 알고리즘으로 자신만의 전략을 개발하기를 추천합니다.\n전략을 개발 하기 위해 트레이딩뷰의 Pine스크립트를 알아야 합니다\n앞으로 전략 개발에 필요한 기초적인 내용에 대해 포스트 할 예정입니다.\n아래의 사이트는 Pine스크립트를 공부하기 위한 유용한 사이트입니다.\n Pine스크립트 메뉴얼 트레이딩뷰 블로그 TradingCode.net(해외사이트 크롬의 한글번역으로 보세요!) Trading View Wiki  ","date":"March 5, 2022","hero":"/posts/first/images/hero.png","permalink":"https://tvextbot.github.io/posts/first/","summary":"\u003cblockquote\u003e\n\u003cp\u003e처음 사용하시는 분들을 위한 사용자 가이드입니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["매뉴얼","시작하기"],"title":"시작하기"},{"categories":["Manual"],"contents":" 웹훅URL에 의한 자동매매란 컴퓨터를 껀 상태에서도 트레이딩뷰와 연동하여 자동매매가 가능한 새로운 기능입니다.\n 웹훅URL에 의한 자동매매란 컴퓨터를 껀 상태에서도 트레이딩뷰와 연동하여 자동매매가 가능한 새로운 기능으로 기존 컴퓨터를 계속 켜둬야 하거나 비싼 가격의 가상환경을 구매하여 자동매매를 해야하는 부담감에서 벗어나서 자동매매를 할 수 있습니다.\n 유의사항  웹훅URL은 등록하신 인증키의 버전에 따라 다릅니다.본인의 주문메시지 작성화면에 있는 웹훅URL을 꼭 사용해 주세요. 본인의 인증키 버전과 다른 웹훅URL을 사용하면 주문에러가 발생하니 주의하여 주세요. 트라이얼 버전은 인증키 등록화면에 있는 [무료인증키 발행하기] 링크를 통해 무료로 발행할 수 있습니다.    웹훅URL에 의한 자동매매를 실행하는 방법에 대해서 설명하겠습니다.\n1.메시지작성화면으로 이동하면 웹훅URL주소가 있습니다.  2.주문메시지를 작성합니다.  3.트레이딩뷰사이트로 이동하여 새로운 얼러트를 생성하여 위에서 작성한 주문메시지와 웹혹URL을 아래와 같이 입력합니다.\n  웹훅URL을 반드시 체크하세요.\n   웹훅URL을 체크한다음 위의 3에서 웹훅URL을 복사하여 붙여넣기를 합니다.\n 주문메시지를 입력한후 저장버튼을 클릭합니다.\n","date":"March 5, 2022","hero":"/posts/webhook/images/hero.png","permalink":"https://tvextbot.github.io/posts/webhook/","summary":"\u003cblockquote\u003e\n\u003cp\u003e웹훅URL에 의한 자동매매란 컴퓨터를 껀 상태에서도 트레이딩뷰와 연동하여 자동매매가 가능한 새로운 기능입니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["웹훅","자동매매","웹훅URL"],"title":"웹훅URL에 의한 자동매매"},{"categories":["Manual"],"contents":" 인증키를 구매하기 위한 송금방법과 프로그램내 인증키 등록방법에 대해서 설명합니다.\n 1.TVExtBot의 설정화면에서 API키 등록화면을 선택해 주세요.   인증키를 등록하지 않아 바이낸스선물, 빗썸, 바이비트, 비트맥스는,비트겟은 락이 걸린 상태입니다.\n2.인증키등록 화면으로 이동해 주세요.\n  인증키 종류\n TRIAL (트라이얼) 버전 : 무료 STANDARD (스탠더드) 버전 : 유료 EXPERT (엑스퍼트) 버전 : 유료 (기본전략포함)    [결제]버튼을 클릭하여 송금화면으로 이동해 주세요.  예로 EXPERT 버전을 등록해 보겠습니다.\n3.결제화면에 이메일을 입력 후 [Next]버튼을 클릭합니다.  ※ 입력하시 이메일로 인증키를 보내드릴 예정이니 정확하게 기입해 주세요.\n4.송금을 하실 코인의 종류를 선택합니다.   여기서 라이트코인을 선택해 보겠습니다.\n ※ 수수료가 싼 라이트 코인 또는 비트코인 캐쉬를 선택해 주세요.\n 5.라이트코인의 송금금액과 송금주소가 나타납니다.   송금금액과 송금주소를 복사하여 출금할 거래소 또는 지갑(월렛)에 입력하여 출금을 실행합니다.\n ※ 각 거래소 또는 지갑의 출금방법에 대해서는 인터넷상의 정보를 참고하세요.\n 6.입금이 확인되면 3.에서 입력하신 이메일로 인증키를 보내드리겠습니다.\n ※ 인증키는 입금이 완료되면 자동발송 됩니다.\n 7.인증키가 도착하면 인증키등록 화면으로 이동하여 이메일과 인증키를 입력하여 [인증하기]버튼을 클릭합니다.  8.다시 API키 등록화면으로 이동하시면 거래소의 버튼에 락이 해제된것을 확인할 수 있습니다.    위의 송금 가능한 코인 이외에 다른 코인이나 은행계좌이체로 송금을 원하실 경우에는  메일 또는  텔레그램으로 문의해 주시면 감사하겠습니다.\n","date":"March 5, 2022","hero":"/posts/authguide/images/hero.png","permalink":"https://tvextbot.github.io/posts/authguide/","summary":"\u003cblockquote\u003e\n\u003cp\u003e인증키를 구매하기 위한 송금방법과 프로그램내 인증키 등록방법에 대해서 설명합니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["인증키 등록","구매가이드"],"title":"인증키 등록\u0026구매가이드"},{"categories":["Manual"],"contents":" TVExtBot에서 실행된 자동매매와 에러정보를 실시간으로 받아 볼수 있는  텔레그램 알림봇 서비스입니다.\n앞으로는 외출중에도 TVExtBot에서 자동매매되는 주문정보와 에러정보를 실시간으로 받아 보실수 있습니다.\n 텔레그램 알림봇 설정방법 아래의 내용은  텔레그램 알림봇 서비스를 사용하기 위한 설명입니다.\n1.TVExtBot의 설정화면에서 기본설정내의 @TTVExtBot 링크를 클릭하여 텔레그램 알림봇 서비스에 등록하여 주세요.  ※ 스마트폰에서 등록하실 경우 텔레그램을 설치한 스마트폰에서 아래의 링크를 클릭하여 주세요.\n https://t.me/TTVExtBot\n2.본인의 텔레그램 프로그램의 설정에서 [프로필 수정]을 엽니다.   위의 사용자명에서 @를 제외한 사용자명을 기본설정의 사용자명에 입력합니다.\n 3.다시 TVExtBot의 설정화면의 기본설정으로 돌아와서 본인의 사용자명을 입력하여 적용버튼을 클릭해 주세요.    [텔레그램 사용자명을 설정하였습니다.]라는 메시지가 떠는걸 확인해 주세요.(메시지가 안뜨면 제대로 등록되지 않은 상태입니다.)\n 4.아래와 같이 실시간으로 TVExtBot에서 자동매매되는 주문정보와 에러정보를 실시간으로 받아 보실수 있습니다.  텔레그램 알림이 안올때의 대응방법 ①텔레그램 알림봇창에서 아래와 같이 『/start』 를 입력합니다.  ②기본설정에서 사용자명을 재입력해서 적용해 주세요.    [텔레그램 사용자명을 설정하였습니다.]라는 메시지가 뜨면 문제없이 설정된겁니다.\n","date":"March 5, 2022","hero":"/posts/telegram/images/hero.png","permalink":"https://tvextbot.github.io/posts/telegram/","summary":"\u003cblockquote\u003e\n\u003cp\u003eTVExtBot에서 실행된 \u003cspan class=\"text-success\"\u003e자동매매와 에러정보를 실시간\u003c/span\u003e으로 받아 볼수 있는 \u003cspan class=\"text-primary\"\u003e\u003ci class=\"fab fa-telegram\"\u003e\u003c/i\u003e 텔레그램 알림봇 서비스\u003c/span\u003e입니다.\u003cbr\u003e\n앞으로는 외출중에도 TVExtBot에서 자동매매되는 주문정보와 에러정보를 실시간으로 받아 보실수 있습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["텔레그램 알림봇","알림봇"],"title":"텔레그램 개인 알림봇 사용법"},{"categories":["Manual"],"contents":" 바이낸스선물(Binance Futures)에서 롱과 숏 계약을 동시에 보유할 수 있는 양방향 포지션 모드가 추가되었습니다.\n TVExtBot에서 양방향 포지션 모드를 설정해서 사용하는 방법을 간단히 설명해 드리겠습니다.\n1.우선 바이낸스 선물 거래소에서 아래의 설정을 클릭하여 Position Mode를 선택합니다.  2.아래와 같이 포지션모드를 선택할수 있는 창이 뜹니다.  3.양 사이드 포지션을 선택후 Confirm버튼을 클릭합니다.   포지션모드 조정 성공메시지가 뜹니다.\n※ 바이낸스거래소에 포지션을 가지고 있을때에는 포지션모드를 변경할수 없습니다. 그러니 포지션을 정리후 양방향 포지션 모드를 변경해 주세요.\n4.TVExtBot 설정의 메시지 작성화면에서 Binance-Futures 거래소를 선택하면 \u0026ldquo;바이낸스선물 거래소 설정에서 포지션모드가 양방향 포지션으로 선택되어져 있습니다.\u0026ldquo;메시지가 뜹니다.  5.주문방법을 선택하면 매수,매도,청산(매수포지션종료),청산(매도포지션종료) 항목이 표시됩니다.    한방향 포지션 모드일경우에는 매수,매도,청산 항목만 있습니다.\n 6.매수포지션 청산시에는 청산(매수포지션종료)을 선택하고 매도포지션 청산시에는 청산(매도포지션종료)를 선택합니다.\n그외의 설정방법은 기존의 메시지 설정과 동일합니다.\n","date":"March 4, 2022","hero":"/posts/binance_dual_positions/images/hero.png","permalink":"https://tvextbot.github.io/posts/binance_dual_positions/","summary":"\u003cblockquote\u003e\n\u003cp\u003e바이낸스선물(Binance Futures)에서 롱과 숏 계약을 동시에 보유할 수 있는 양방향 포지션 모드가 추가되었습니다.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["바이낸스선물","양방향"],"title":"바이낸스선물 양방향 포지션 설정법"}]